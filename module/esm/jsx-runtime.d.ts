import { ChildTags, TagCreatorFunction } from "./ai-ui.js";
type AIUIJSXTag = (keyof HTMLElementTagNameMap | TagCreatorFunction<Element> | AIUIJSX);
type AIUIJSXElement<N extends AIUIJSXTag, C extends ChildTags[]> = N extends TagCreatorFunction<Element> ? ReturnType<N> : N extends keyof HTMLElementTagNameMap ? ReturnType<TagCreatorFunction<HTMLElementTagNameMap[keyof HTMLElementTagNameMap]>> : N extends AIUIJSX ? C : never;
type AIUIJSX = <T extends {}, N extends AIUIJSXTag, C extends ChildTags[]>(tagName: N, attrs: T | null, ...children: C) => AIUIJSXElement<N, C>;
declare const AIUIJSX: AIUIJSX;
export declare const jsx: <T extends {
    children?: ChildTags[] | undefined;
}>(tagName: AIUIJSXTag, attrs: T) => Element | (Omit<HTMLObjectElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLObjectElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLObjectElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLObjectElement, event: Event) => any) | null;
    onblur: ((this: HTMLObjectElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLObjectElement, event: Event) => any) | null;
    onchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onclick: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLObjectElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncut: ((this: HTMLObjectElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onemptied: ((this: HTMLObjectElement, event: Event) => any) | null;
    onended: ((this: HTMLObjectElement, event: Event) => any) | null;
    onerror: ((this: HTMLObjectElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLObjectElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLObjectElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLObjectElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLObjectElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLObjectElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLObjectElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLObjectElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLObjectElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLObjectElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLObjectElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLObjectElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLObjectElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLObjectElement, event: Event) => any) | null;
    onplay: ((this: HTMLObjectElement, event: Event) => any) | null;
    onplaying: ((this: HTMLObjectElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLObjectElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onreset: ((this: HTMLObjectElement, event: Event) => any) | null;
    onresize: ((this: HTMLObjectElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLObjectElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLObjectElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLObjectElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLObjectElement, event: Event) => any) | null;
    onseeking: ((this: HTMLObjectElement, event: Event) => any) | null;
    onselect: ((this: HTMLObjectElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLObjectElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onstalled: ((this: HTMLObjectElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLObjectElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLObjectElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLObjectElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLObjectElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwheel: ((this: HTMLObjectElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLElement, event: Event) => any) | null;
    onblur: ((this: HTMLElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLElement, event: Event) => any) | null;
    onchange: ((this: HTMLElement, event: Event) => any) | null;
    onclick: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLElement, event: Event) => any) | null;
    oncut: ((this: HTMLElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLElement, event: Event) => any) | null;
    onemptied: ((this: HTMLElement, event: Event) => any) | null;
    onended: ((this: HTMLElement, event: Event) => any) | null;
    onerror: ((this: HTMLElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLElement, event: Event) => any) | null;
    onplay: ((this: HTMLElement, event: Event) => any) | null;
    onplaying: ((this: HTMLElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLElement, event: Event) => any) | null;
    onreset: ((this: HTMLElement, event: Event) => any) | null;
    onresize: ((this: HTMLElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLElement, event: Event) => any) | null;
    onseeking: ((this: HTMLElement, event: Event) => any) | null;
    onselect: ((this: HTMLElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLElement, event: Event) => any) | null;
    onstalled: ((this: HTMLElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLElement, event: Event) => any) | null;
    onwheel: ((this: HTMLElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSlotElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSlotElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSlotElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSlotElement, event: Event) => any) | null;
    onblur: ((this: HTMLSlotElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSlotElement, event: Event) => any) | null;
    onchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onclick: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSlotElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncut: ((this: HTMLSlotElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSlotElement, event: Event) => any) | null;
    onended: ((this: HTMLSlotElement, event: Event) => any) | null;
    onerror: ((this: HTMLSlotElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSlotElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSlotElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSlotElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSlotElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSlotElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSlotElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSlotElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSlotElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSlotElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSlotElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSlotElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSlotElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSlotElement, event: Event) => any) | null;
    onplay: ((this: HTMLSlotElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSlotElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSlotElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onreset: ((this: HTMLSlotElement, event: Event) => any) | null;
    onresize: ((this: HTMLSlotElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSlotElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSlotElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSlotElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSlotElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSlotElement, event: Event) => any) | null;
    onselect: ((this: HTMLSlotElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSlotElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSlotElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSlotElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSlotElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSlotElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSlotElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSlotElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLInputElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLInputElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLInputElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLInputElement, event: Event) => any) | null;
    onblur: ((this: HTMLInputElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLInputElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLInputElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLInputElement, event: Event) => any) | null;
    onchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onclick: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLInputElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLInputElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLInputElement, event: Event) => any) | null;
    oncut: ((this: HTMLInputElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onemptied: ((this: HTMLInputElement, event: Event) => any) | null;
    onended: ((this: HTMLInputElement, event: Event) => any) | null;
    onerror: ((this: HTMLInputElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLInputElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLInputElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLInputElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLInputElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLInputElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLInputElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLInputElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLInputElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLInputElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLInputElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLInputElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLInputElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLInputElement, event: Event) => any) | null;
    onplay: ((this: HTMLInputElement, event: Event) => any) | null;
    onplaying: ((this: HTMLInputElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLInputElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLInputElement, event: Event) => any) | null;
    onreset: ((this: HTMLInputElement, event: Event) => any) | null;
    onresize: ((this: HTMLInputElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLInputElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLInputElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLInputElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLInputElement, event: Event) => any) | null;
    onseeking: ((this: HTMLInputElement, event: Event) => any) | null;
    onselect: ((this: HTMLInputElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLInputElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onstalled: ((this: HTMLInputElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLInputElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLInputElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLInputElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLInputElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLInputElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLInputElement, event: Event) => any) | null;
    onwheel: ((this: HTMLInputElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLProgressElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLProgressElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLProgressElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLProgressElement, event: Event) => any) | null;
    onblur: ((this: HTMLProgressElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLProgressElement, event: Event) => any) | null;
    onchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onclick: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLProgressElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncut: ((this: HTMLProgressElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onemptied: ((this: HTMLProgressElement, event: Event) => any) | null;
    onended: ((this: HTMLProgressElement, event: Event) => any) | null;
    onerror: ((this: HTMLProgressElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLProgressElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLProgressElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLProgressElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLProgressElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLProgressElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLProgressElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLProgressElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLProgressElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLProgressElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLProgressElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLProgressElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLProgressElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLProgressElement, event: Event) => any) | null;
    onplay: ((this: HTMLProgressElement, event: Event) => any) | null;
    onplaying: ((this: HTMLProgressElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLProgressElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onreset: ((this: HTMLProgressElement, event: Event) => any) | null;
    onresize: ((this: HTMLProgressElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLProgressElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLProgressElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLProgressElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLProgressElement, event: Event) => any) | null;
    onseeking: ((this: HTMLProgressElement, event: Event) => any) | null;
    onselect: ((this: HTMLProgressElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLProgressElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onstalled: ((this: HTMLProgressElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLProgressElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLProgressElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLProgressElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLProgressElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwheel: ((this: HTMLProgressElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSelectElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSelectElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSelectElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSelectElement, event: Event) => any) | null;
    onblur: ((this: HTMLSelectElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSelectElement, event: Event) => any) | null;
    onchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onclick: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSelectElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncut: ((this: HTMLSelectElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSelectElement, event: Event) => any) | null;
    onended: ((this: HTMLSelectElement, event: Event) => any) | null;
    onerror: ((this: HTMLSelectElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSelectElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSelectElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSelectElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSelectElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSelectElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSelectElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSelectElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSelectElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSelectElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSelectElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSelectElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSelectElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSelectElement, event: Event) => any) | null;
    onplay: ((this: HTMLSelectElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSelectElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSelectElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onreset: ((this: HTMLSelectElement, event: Event) => any) | null;
    onresize: ((this: HTMLSelectElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSelectElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSelectElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSelectElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSelectElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSelectElement, event: Event) => any) | null;
    onselect: ((this: HTMLSelectElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSelectElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSelectElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSelectElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSelectElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSelectElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSelectElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSelectElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMapElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMapElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMapElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMapElement, event: Event) => any) | null;
    onblur: ((this: HTMLMapElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMapElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMapElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMapElement, event: Event) => any) | null;
    onchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onclick: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMapElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMapElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMapElement, event: Event) => any) | null;
    oncut: ((this: HTMLMapElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMapElement, event: Event) => any) | null;
    onended: ((this: HTMLMapElement, event: Event) => any) | null;
    onerror: ((this: HTMLMapElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMapElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMapElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMapElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMapElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMapElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMapElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMapElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMapElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMapElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMapElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMapElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMapElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMapElement, event: Event) => any) | null;
    onplay: ((this: HTMLMapElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMapElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMapElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMapElement, event: Event) => any) | null;
    onreset: ((this: HTMLMapElement, event: Event) => any) | null;
    onresize: ((this: HTMLMapElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMapElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMapElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMapElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMapElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMapElement, event: Event) => any) | null;
    onselect: ((this: HTMLMapElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMapElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMapElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMapElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMapElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMapElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMapElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMapElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMapElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMapElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLAnchorElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLAnchorElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLAnchorElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onblur: ((this: HTMLAnchorElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onclick: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLAnchorElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncut: ((this: HTMLAnchorElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onemptied: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onended: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onerror: ((this: HTMLAnchorElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLAnchorElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLAnchorElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLAnchorElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLAnchorElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLAnchorElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLAnchorElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onplay: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onplaying: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLAnchorElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onreset: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onresize: ((this: HTMLAnchorElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLAnchorElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onseeking: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onselect: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onstalled: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLAnchorElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLAnchorElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLAnchorElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwheel: ((this: HTMLAnchorElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLAreaElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLAreaElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLAreaElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLAreaElement, event: Event) => any) | null;
    onblur: ((this: HTMLAreaElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLAreaElement, event: Event) => any) | null;
    onchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onclick: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLAreaElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncut: ((this: HTMLAreaElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onemptied: ((this: HTMLAreaElement, event: Event) => any) | null;
    onended: ((this: HTMLAreaElement, event: Event) => any) | null;
    onerror: ((this: HTMLAreaElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLAreaElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLAreaElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLAreaElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLAreaElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLAreaElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLAreaElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLAreaElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLAreaElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLAreaElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLAreaElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLAreaElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLAreaElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLAreaElement, event: Event) => any) | null;
    onplay: ((this: HTMLAreaElement, event: Event) => any) | null;
    onplaying: ((this: HTMLAreaElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLAreaElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onreset: ((this: HTMLAreaElement, event: Event) => any) | null;
    onresize: ((this: HTMLAreaElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLAreaElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLAreaElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLAreaElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLAreaElement, event: Event) => any) | null;
    onseeking: ((this: HTMLAreaElement, event: Event) => any) | null;
    onselect: ((this: HTMLAreaElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLAreaElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onstalled: ((this: HTMLAreaElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLAreaElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLAreaElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLAreaElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLAreaElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwheel: ((this: HTMLAreaElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLAudioElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLAudioElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLAudioElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLAudioElement, event: Event) => any) | null;
    onblur: ((this: HTMLAudioElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLAudioElement, event: Event) => any) | null;
    onchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onclick: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLAudioElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncut: ((this: HTMLAudioElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onemptied: ((this: HTMLAudioElement, event: Event) => any) | null;
    onended: ((this: HTMLAudioElement, event: Event) => any) | null;
    onerror: ((this: HTMLAudioElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLAudioElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLAudioElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLAudioElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLAudioElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLAudioElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLAudioElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLAudioElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLAudioElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLAudioElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLAudioElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLAudioElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLAudioElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLAudioElement, event: Event) => any) | null;
    onplay: ((this: HTMLAudioElement, event: Event) => any) | null;
    onplaying: ((this: HTMLAudioElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLAudioElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onreset: ((this: HTMLAudioElement, event: Event) => any) | null;
    onresize: ((this: HTMLAudioElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLAudioElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLAudioElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLAudioElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLAudioElement, event: Event) => any) | null;
    onseeking: ((this: HTMLAudioElement, event: Event) => any) | null;
    onselect: ((this: HTMLAudioElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLAudioElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onstalled: ((this: HTMLAudioElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLAudioElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLAudioElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLAudioElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLAudioElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwheel: ((this: HTMLAudioElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLBaseElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLBaseElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLBaseElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLBaseElement, event: Event) => any) | null;
    onblur: ((this: HTMLBaseElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLBaseElement, event: Event) => any) | null;
    onchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onclick: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLBaseElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncut: ((this: HTMLBaseElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onemptied: ((this: HTMLBaseElement, event: Event) => any) | null;
    onended: ((this: HTMLBaseElement, event: Event) => any) | null;
    onerror: ((this: HTMLBaseElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLBaseElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLBaseElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLBaseElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLBaseElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLBaseElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLBaseElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLBaseElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLBaseElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLBaseElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLBaseElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLBaseElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLBaseElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLBaseElement, event: Event) => any) | null;
    onplay: ((this: HTMLBaseElement, event: Event) => any) | null;
    onplaying: ((this: HTMLBaseElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLBaseElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onreset: ((this: HTMLBaseElement, event: Event) => any) | null;
    onresize: ((this: HTMLBaseElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLBaseElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLBaseElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLBaseElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLBaseElement, event: Event) => any) | null;
    onseeking: ((this: HTMLBaseElement, event: Event) => any) | null;
    onselect: ((this: HTMLBaseElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLBaseElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onstalled: ((this: HTMLBaseElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLBaseElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLBaseElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLBaseElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLBaseElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwheel: ((this: HTMLBaseElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLQuoteElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLQuoteElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLQuoteElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onblur: ((this: HTMLQuoteElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onclick: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLQuoteElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncut: ((this: HTMLQuoteElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onemptied: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onended: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onerror: ((this: HTMLQuoteElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLQuoteElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLQuoteElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLQuoteElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLQuoteElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLQuoteElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLQuoteElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onplay: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onplaying: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLQuoteElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onreset: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onresize: ((this: HTMLQuoteElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLQuoteElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onseeking: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onselect: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onstalled: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLQuoteElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLQuoteElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLQuoteElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwheel: ((this: HTMLQuoteElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLBodyElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLBodyElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLBodyElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLBodyElement, event: Event) => any) | null;
    onblur: ((this: HTMLBodyElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLBodyElement, event: Event) => any) | null;
    onchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onclick: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLBodyElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncut: ((this: HTMLBodyElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onemptied: ((this: HTMLBodyElement, event: Event) => any) | null;
    onended: ((this: HTMLBodyElement, event: Event) => any) | null;
    onerror: ((this: HTMLBodyElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLBodyElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLBodyElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLBodyElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLBodyElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLBodyElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLBodyElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLBodyElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLBodyElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLBodyElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLBodyElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLBodyElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLBodyElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLBodyElement, event: Event) => any) | null;
    onplay: ((this: HTMLBodyElement, event: Event) => any) | null;
    onplaying: ((this: HTMLBodyElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLBodyElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onreset: ((this: HTMLBodyElement, event: Event) => any) | null;
    onresize: ((this: HTMLBodyElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLBodyElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLBodyElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLBodyElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLBodyElement, event: Event) => any) | null;
    onseeking: ((this: HTMLBodyElement, event: Event) => any) | null;
    onselect: ((this: HTMLBodyElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLBodyElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onstalled: ((this: HTMLBodyElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLBodyElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLBodyElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLBodyElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLBodyElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwheel: ((this: HTMLBodyElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLBRElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLBRElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLBRElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLBRElement, event: Event) => any) | null;
    onblur: ((this: HTMLBRElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLBRElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLBRElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLBRElement, event: Event) => any) | null;
    onchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onclick: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLBRElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLBRElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLBRElement, event: Event) => any) | null;
    oncut: ((this: HTMLBRElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onemptied: ((this: HTMLBRElement, event: Event) => any) | null;
    onended: ((this: HTMLBRElement, event: Event) => any) | null;
    onerror: ((this: HTMLBRElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLBRElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLBRElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLBRElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLBRElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLBRElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLBRElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLBRElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLBRElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLBRElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLBRElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLBRElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLBRElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLBRElement, event: Event) => any) | null;
    onplay: ((this: HTMLBRElement, event: Event) => any) | null;
    onplaying: ((this: HTMLBRElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLBRElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLBRElement, event: Event) => any) | null;
    onreset: ((this: HTMLBRElement, event: Event) => any) | null;
    onresize: ((this: HTMLBRElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLBRElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLBRElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLBRElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLBRElement, event: Event) => any) | null;
    onseeking: ((this: HTMLBRElement, event: Event) => any) | null;
    onselect: ((this: HTMLBRElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLBRElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onstalled: ((this: HTMLBRElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLBRElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLBRElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLBRElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLBRElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLBRElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLBRElement, event: Event) => any) | null;
    onwheel: ((this: HTMLBRElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLButtonElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLButtonElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLButtonElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLButtonElement, event: Event) => any) | null;
    onblur: ((this: HTMLButtonElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLButtonElement, event: Event) => any) | null;
    onchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onclick: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLButtonElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncut: ((this: HTMLButtonElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onemptied: ((this: HTMLButtonElement, event: Event) => any) | null;
    onended: ((this: HTMLButtonElement, event: Event) => any) | null;
    onerror: ((this: HTMLButtonElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLButtonElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLButtonElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLButtonElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLButtonElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLButtonElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLButtonElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLButtonElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLButtonElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLButtonElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLButtonElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLButtonElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLButtonElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLButtonElement, event: Event) => any) | null;
    onplay: ((this: HTMLButtonElement, event: Event) => any) | null;
    onplaying: ((this: HTMLButtonElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLButtonElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onreset: ((this: HTMLButtonElement, event: Event) => any) | null;
    onresize: ((this: HTMLButtonElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLButtonElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLButtonElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLButtonElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLButtonElement, event: Event) => any) | null;
    onseeking: ((this: HTMLButtonElement, event: Event) => any) | null;
    onselect: ((this: HTMLButtonElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLButtonElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onstalled: ((this: HTMLButtonElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLButtonElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLButtonElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLButtonElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLButtonElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwheel: ((this: HTMLButtonElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLCanvasElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLCanvasElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLCanvasElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onblur: ((this: HTMLCanvasElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onclick: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLCanvasElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncut: ((this: HTMLCanvasElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onemptied: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onended: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onerror: ((this: HTMLCanvasElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLCanvasElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLCanvasElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLCanvasElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLCanvasElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLCanvasElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLCanvasElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onplay: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onplaying: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLCanvasElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onreset: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onresize: ((this: HTMLCanvasElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLCanvasElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onseeking: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onselect: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onstalled: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLCanvasElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLCanvasElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLCanvasElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwheel: ((this: HTMLCanvasElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableCaptionElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableCaptionElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableCaptionElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableCaptionElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableCaptionElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableCaptionElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onended: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableCaptionElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableCaptionElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableCaptionElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableCaptionElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableCaptionElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableCaptionElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableCaptionElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableCaptionElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableCaptionElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableCaptionElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableCaptionElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableCaptionElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableColElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableColElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableColElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableColElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableColElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableColElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableColElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableColElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableColElement, event: Event) => any) | null;
    onended: ((this: HTMLTableColElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableColElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableColElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableColElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableColElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableColElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableColElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableColElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableColElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableColElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableColElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableColElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableColElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableColElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableColElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableColElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableColElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableColElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableColElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableColElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableColElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableColElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableColElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableColElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableColElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableColElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableColElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableColElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableColElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableColElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableColElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableColElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableColElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDataElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDataElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDataElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDataElement, event: Event) => any) | null;
    onblur: ((this: HTMLDataElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDataElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDataElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDataElement, event: Event) => any) | null;
    onchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onclick: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDataElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDataElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDataElement, event: Event) => any) | null;
    oncut: ((this: HTMLDataElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDataElement, event: Event) => any) | null;
    onended: ((this: HTMLDataElement, event: Event) => any) | null;
    onerror: ((this: HTMLDataElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDataElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDataElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDataElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDataElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDataElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDataElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDataElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDataElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDataElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDataElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDataElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDataElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDataElement, event: Event) => any) | null;
    onplay: ((this: HTMLDataElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDataElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDataElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDataElement, event: Event) => any) | null;
    onreset: ((this: HTMLDataElement, event: Event) => any) | null;
    onresize: ((this: HTMLDataElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDataElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDataElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDataElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDataElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDataElement, event: Event) => any) | null;
    onselect: ((this: HTMLDataElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDataElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDataElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDataElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDataElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDataElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDataElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDataElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDataElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDataElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDataListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDataListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDataListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDataListElement, event: Event) => any) | null;
    onblur: ((this: HTMLDataListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDataListElement, event: Event) => any) | null;
    onchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onclick: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDataListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncut: ((this: HTMLDataListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDataListElement, event: Event) => any) | null;
    onended: ((this: HTMLDataListElement, event: Event) => any) | null;
    onerror: ((this: HTMLDataListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDataListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDataListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDataListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDataListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDataListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDataListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDataListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDataListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDataListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDataListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDataListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDataListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDataListElement, event: Event) => any) | null;
    onplay: ((this: HTMLDataListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDataListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDataListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onreset: ((this: HTMLDataListElement, event: Event) => any) | null;
    onresize: ((this: HTMLDataListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDataListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDataListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDataListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDataListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDataListElement, event: Event) => any) | null;
    onselect: ((this: HTMLDataListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDataListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDataListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDataListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDataListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDataListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDataListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDataListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLModElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLModElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLModElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLModElement, event: Event) => any) | null;
    onblur: ((this: HTMLModElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLModElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLModElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLModElement, event: Event) => any) | null;
    onchange: ((this: HTMLModElement, event: Event) => any) | null;
    onclick: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLModElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLModElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLModElement, event: Event) => any) | null;
    oncut: ((this: HTMLModElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLModElement, event: Event) => any) | null;
    onemptied: ((this: HTMLModElement, event: Event) => any) | null;
    onended: ((this: HTMLModElement, event: Event) => any) | null;
    onerror: ((this: HTMLModElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLModElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLModElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLModElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLModElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLModElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLModElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLModElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLModElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLModElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLModElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLModElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLModElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLModElement, event: Event) => any) | null;
    onplay: ((this: HTMLModElement, event: Event) => any) | null;
    onplaying: ((this: HTMLModElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLModElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLModElement, event: Event) => any) | null;
    onreset: ((this: HTMLModElement, event: Event) => any) | null;
    onresize: ((this: HTMLModElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLModElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLModElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLModElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLModElement, event: Event) => any) | null;
    onseeking: ((this: HTMLModElement, event: Event) => any) | null;
    onselect: ((this: HTMLModElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLModElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLModElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLModElement, event: Event) => any) | null;
    onstalled: ((this: HTMLModElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLModElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLModElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLModElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLModElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLModElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLModElement, event: Event) => any) | null;
    onwheel: ((this: HTMLModElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDetailsElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDetailsElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDetailsElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onblur: ((this: HTMLDetailsElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onclick: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDetailsElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncut: ((this: HTMLDetailsElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onended: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onerror: ((this: HTMLDetailsElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDetailsElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDetailsElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDetailsElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDetailsElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDetailsElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDetailsElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onplay: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDetailsElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onreset: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onresize: ((this: HTMLDetailsElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDetailsElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onselect: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDetailsElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDetailsElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDetailsElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDetailsElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDialogElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDialogElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDialogElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDialogElement, event: Event) => any) | null;
    onblur: ((this: HTMLDialogElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDialogElement, event: Event) => any) | null;
    onchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onclick: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDialogElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncut: ((this: HTMLDialogElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDialogElement, event: Event) => any) | null;
    onended: ((this: HTMLDialogElement, event: Event) => any) | null;
    onerror: ((this: HTMLDialogElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDialogElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDialogElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDialogElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDialogElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDialogElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDialogElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDialogElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDialogElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDialogElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDialogElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDialogElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDialogElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDialogElement, event: Event) => any) | null;
    onplay: ((this: HTMLDialogElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDialogElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDialogElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onreset: ((this: HTMLDialogElement, event: Event) => any) | null;
    onresize: ((this: HTMLDialogElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDialogElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDialogElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDialogElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDialogElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDialogElement, event: Event) => any) | null;
    onselect: ((this: HTMLDialogElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDialogElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDialogElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDialogElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDialogElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDialogElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDialogElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDialogElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDivElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDivElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDivElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDivElement, event: Event) => any) | null;
    onblur: ((this: HTMLDivElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDivElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDivElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDivElement, event: Event) => any) | null;
    onchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onclick: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDivElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDivElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDivElement, event: Event) => any) | null;
    oncut: ((this: HTMLDivElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDivElement, event: Event) => any) | null;
    onended: ((this: HTMLDivElement, event: Event) => any) | null;
    onerror: ((this: HTMLDivElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDivElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDivElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDivElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDivElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDivElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDivElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDivElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDivElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDivElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDivElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDivElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDivElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDivElement, event: Event) => any) | null;
    onplay: ((this: HTMLDivElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDivElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDivElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDivElement, event: Event) => any) | null;
    onreset: ((this: HTMLDivElement, event: Event) => any) | null;
    onresize: ((this: HTMLDivElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDivElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDivElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDivElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDivElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDivElement, event: Event) => any) | null;
    onselect: ((this: HTMLDivElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDivElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDivElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDivElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDivElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDivElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDivElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDivElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDivElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDivElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDListElement, event: Event) => any) | null;
    onblur: ((this: HTMLDListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDListElement, event: Event) => any) | null;
    onchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onclick: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDListElement, event: Event) => any) | null;
    oncut: ((this: HTMLDListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDListElement, event: Event) => any) | null;
    onended: ((this: HTMLDListElement, event: Event) => any) | null;
    onerror: ((this: HTMLDListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDListElement, event: Event) => any) | null;
    onplay: ((this: HTMLDListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDListElement, event: Event) => any) | null;
    onreset: ((this: HTMLDListElement, event: Event) => any) | null;
    onresize: ((this: HTMLDListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDListElement, event: Event) => any) | null;
    onselect: ((this: HTMLDListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLEmbedElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLEmbedElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLEmbedElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onblur: ((this: HTMLEmbedElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onclick: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLEmbedElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncut: ((this: HTMLEmbedElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onemptied: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onended: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onerror: ((this: HTMLEmbedElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLEmbedElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLEmbedElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLEmbedElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLEmbedElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLEmbedElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLEmbedElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onplay: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onplaying: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLEmbedElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onreset: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onresize: ((this: HTMLEmbedElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLEmbedElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onseeking: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onselect: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onstalled: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLEmbedElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLEmbedElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLEmbedElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwheel: ((this: HTMLEmbedElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLFieldSetElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLFieldSetElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLFieldSetElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onblur: ((this: HTMLFieldSetElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onclick: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLFieldSetElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncut: ((this: HTMLFieldSetElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onemptied: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onended: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onerror: ((this: HTMLFieldSetElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLFieldSetElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLFieldSetElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLFieldSetElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLFieldSetElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLFieldSetElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLFieldSetElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onplay: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onplaying: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLFieldSetElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onreset: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onresize: ((this: HTMLFieldSetElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLFieldSetElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onseeking: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onselect: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onstalled: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLFieldSetElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwheel: ((this: HTMLFieldSetElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLFormElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLFormElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLFormElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLFormElement, event: Event) => any) | null;
    onblur: ((this: HTMLFormElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLFormElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLFormElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLFormElement, event: Event) => any) | null;
    onchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onclick: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLFormElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLFormElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLFormElement, event: Event) => any) | null;
    oncut: ((this: HTMLFormElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onemptied: ((this: HTMLFormElement, event: Event) => any) | null;
    onended: ((this: HTMLFormElement, event: Event) => any) | null;
    onerror: ((this: HTMLFormElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLFormElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLFormElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLFormElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLFormElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLFormElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLFormElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLFormElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLFormElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLFormElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLFormElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLFormElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLFormElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLFormElement, event: Event) => any) | null;
    onplay: ((this: HTMLFormElement, event: Event) => any) | null;
    onplaying: ((this: HTMLFormElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLFormElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLFormElement, event: Event) => any) | null;
    onreset: ((this: HTMLFormElement, event: Event) => any) | null;
    onresize: ((this: HTMLFormElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLFormElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLFormElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLFormElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLFormElement, event: Event) => any) | null;
    onseeking: ((this: HTMLFormElement, event: Event) => any) | null;
    onselect: ((this: HTMLFormElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLFormElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onstalled: ((this: HTMLFormElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLFormElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLFormElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLFormElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLFormElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLFormElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLFormElement, event: Event) => any) | null;
    onwheel: ((this: HTMLFormElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHeadingElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHeadingElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHeadingElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onblur: ((this: HTMLHeadingElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onclick: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHeadingElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncut: ((this: HTMLHeadingElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onended: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onerror: ((this: HTMLHeadingElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHeadingElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHeadingElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHeadingElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHeadingElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHeadingElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHeadingElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onplay: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHeadingElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onreset: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onresize: ((this: HTMLHeadingElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHeadingElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onselect: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHeadingElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHeadingElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHeadingElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHeadingElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHeadElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHeadElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHeadElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHeadElement, event: Event) => any) | null;
    onblur: ((this: HTMLHeadElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHeadElement, event: Event) => any) | null;
    onchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onclick: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHeadElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncut: ((this: HTMLHeadElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHeadElement, event: Event) => any) | null;
    onended: ((this: HTMLHeadElement, event: Event) => any) | null;
    onerror: ((this: HTMLHeadElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHeadElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHeadElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHeadElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHeadElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHeadElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHeadElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHeadElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHeadElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHeadElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHeadElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHeadElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHeadElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHeadElement, event: Event) => any) | null;
    onplay: ((this: HTMLHeadElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHeadElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHeadElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onreset: ((this: HTMLHeadElement, event: Event) => any) | null;
    onresize: ((this: HTMLHeadElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHeadElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHeadElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHeadElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHeadElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHeadElement, event: Event) => any) | null;
    onselect: ((this: HTMLHeadElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHeadElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHeadElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHeadElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHeadElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHeadElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHeadElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHeadElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHRElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHRElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHRElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHRElement, event: Event) => any) | null;
    onblur: ((this: HTMLHRElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHRElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHRElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHRElement, event: Event) => any) | null;
    onchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onclick: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHRElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHRElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHRElement, event: Event) => any) | null;
    oncut: ((this: HTMLHRElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHRElement, event: Event) => any) | null;
    onended: ((this: HTMLHRElement, event: Event) => any) | null;
    onerror: ((this: HTMLHRElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHRElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHRElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHRElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHRElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHRElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHRElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHRElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHRElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHRElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHRElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHRElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHRElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHRElement, event: Event) => any) | null;
    onplay: ((this: HTMLHRElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHRElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHRElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHRElement, event: Event) => any) | null;
    onreset: ((this: HTMLHRElement, event: Event) => any) | null;
    onresize: ((this: HTMLHRElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHRElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHRElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHRElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHRElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHRElement, event: Event) => any) | null;
    onselect: ((this: HTMLHRElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHRElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHRElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHRElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHRElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHRElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHRElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHRElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHRElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHRElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHtmlElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHtmlElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHtmlElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onblur: ((this: HTMLHtmlElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onclick: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHtmlElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncut: ((this: HTMLHtmlElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onended: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onerror: ((this: HTMLHtmlElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHtmlElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHtmlElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHtmlElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHtmlElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHtmlElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHtmlElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onplay: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHtmlElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onreset: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onresize: ((this: HTMLHtmlElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHtmlElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onselect: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHtmlElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHtmlElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHtmlElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHtmlElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLIFrameElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLIFrameElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLIFrameElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onblur: ((this: HTMLIFrameElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onclick: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLIFrameElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncut: ((this: HTMLIFrameElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onemptied: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onended: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onerror: ((this: HTMLIFrameElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLIFrameElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLIFrameElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLIFrameElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLIFrameElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLIFrameElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLIFrameElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onplay: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onplaying: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLIFrameElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onreset: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onresize: ((this: HTMLIFrameElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLIFrameElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onseeking: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onselect: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onstalled: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLIFrameElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLIFrameElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLIFrameElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwheel: ((this: HTMLIFrameElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLImageElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLImageElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLImageElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLImageElement, event: Event) => any) | null;
    onblur: ((this: HTMLImageElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLImageElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLImageElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLImageElement, event: Event) => any) | null;
    onchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onclick: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLImageElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLImageElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLImageElement, event: Event) => any) | null;
    oncut: ((this: HTMLImageElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onemptied: ((this: HTMLImageElement, event: Event) => any) | null;
    onended: ((this: HTMLImageElement, event: Event) => any) | null;
    onerror: ((this: HTMLImageElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLImageElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLImageElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLImageElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLImageElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLImageElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLImageElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLImageElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLImageElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLImageElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLImageElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLImageElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLImageElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLImageElement, event: Event) => any) | null;
    onplay: ((this: HTMLImageElement, event: Event) => any) | null;
    onplaying: ((this: HTMLImageElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLImageElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLImageElement, event: Event) => any) | null;
    onreset: ((this: HTMLImageElement, event: Event) => any) | null;
    onresize: ((this: HTMLImageElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLImageElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLImageElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLImageElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLImageElement, event: Event) => any) | null;
    onseeking: ((this: HTMLImageElement, event: Event) => any) | null;
    onselect: ((this: HTMLImageElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLImageElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onstalled: ((this: HTMLImageElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLImageElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLImageElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLImageElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLImageElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLImageElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLImageElement, event: Event) => any) | null;
    onwheel: ((this: HTMLImageElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLabelElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLabelElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLabelElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLabelElement, event: Event) => any) | null;
    onblur: ((this: HTMLLabelElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLabelElement, event: Event) => any) | null;
    onchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onclick: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLabelElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncut: ((this: HTMLLabelElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLabelElement, event: Event) => any) | null;
    onended: ((this: HTMLLabelElement, event: Event) => any) | null;
    onerror: ((this: HTMLLabelElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLabelElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLabelElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLabelElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLabelElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLabelElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLabelElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLabelElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLabelElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLabelElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLabelElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLabelElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLabelElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLabelElement, event: Event) => any) | null;
    onplay: ((this: HTMLLabelElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLabelElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLabelElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onreset: ((this: HTMLLabelElement, event: Event) => any) | null;
    onresize: ((this: HTMLLabelElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLabelElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLabelElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLabelElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLabelElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLabelElement, event: Event) => any) | null;
    onselect: ((this: HTMLLabelElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLabelElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLabelElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLabelElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLabelElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLabelElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLabelElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLabelElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLegendElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLegendElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLegendElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLegendElement, event: Event) => any) | null;
    onblur: ((this: HTMLLegendElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLegendElement, event: Event) => any) | null;
    onchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onclick: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLegendElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncut: ((this: HTMLLegendElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLegendElement, event: Event) => any) | null;
    onended: ((this: HTMLLegendElement, event: Event) => any) | null;
    onerror: ((this: HTMLLegendElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLegendElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLegendElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLegendElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLegendElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLegendElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLegendElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLegendElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLegendElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLegendElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLegendElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLegendElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLegendElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLegendElement, event: Event) => any) | null;
    onplay: ((this: HTMLLegendElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLegendElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLegendElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onreset: ((this: HTMLLegendElement, event: Event) => any) | null;
    onresize: ((this: HTMLLegendElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLegendElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLegendElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLegendElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLegendElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLegendElement, event: Event) => any) | null;
    onselect: ((this: HTMLLegendElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLegendElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLegendElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLegendElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLegendElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLegendElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLegendElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLegendElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLIElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLIElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLIElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLIElement, event: Event) => any) | null;
    onblur: ((this: HTMLLIElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLIElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLIElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLIElement, event: Event) => any) | null;
    onchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onclick: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLIElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLIElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLIElement, event: Event) => any) | null;
    oncut: ((this: HTMLLIElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLIElement, event: Event) => any) | null;
    onended: ((this: HTMLLIElement, event: Event) => any) | null;
    onerror: ((this: HTMLLIElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLIElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLIElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLIElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLIElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLIElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLIElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLIElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLIElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLIElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLIElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLIElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLIElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLIElement, event: Event) => any) | null;
    onplay: ((this: HTMLLIElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLIElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLIElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLIElement, event: Event) => any) | null;
    onreset: ((this: HTMLLIElement, event: Event) => any) | null;
    onresize: ((this: HTMLLIElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLIElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLIElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLIElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLIElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLIElement, event: Event) => any) | null;
    onselect: ((this: HTMLLIElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLIElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLIElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLIElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLIElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLIElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLIElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLIElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLIElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLIElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLinkElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLinkElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLinkElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLinkElement, event: Event) => any) | null;
    onblur: ((this: HTMLLinkElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLinkElement, event: Event) => any) | null;
    onchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onclick: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLinkElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncut: ((this: HTMLLinkElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLinkElement, event: Event) => any) | null;
    onended: ((this: HTMLLinkElement, event: Event) => any) | null;
    onerror: ((this: HTMLLinkElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLinkElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLinkElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLinkElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLinkElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLinkElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLinkElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLinkElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLinkElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLinkElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLinkElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLinkElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLinkElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLinkElement, event: Event) => any) | null;
    onplay: ((this: HTMLLinkElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLinkElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLinkElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onreset: ((this: HTMLLinkElement, event: Event) => any) | null;
    onresize: ((this: HTMLLinkElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLinkElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLinkElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLinkElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLinkElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLinkElement, event: Event) => any) | null;
    onselect: ((this: HTMLLinkElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLinkElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLinkElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLinkElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLinkElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLinkElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLinkElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLinkElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMenuElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMenuElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMenuElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMenuElement, event: Event) => any) | null;
    onblur: ((this: HTMLMenuElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMenuElement, event: Event) => any) | null;
    onchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onclick: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMenuElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncut: ((this: HTMLMenuElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMenuElement, event: Event) => any) | null;
    onended: ((this: HTMLMenuElement, event: Event) => any) | null;
    onerror: ((this: HTMLMenuElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMenuElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMenuElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMenuElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMenuElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMenuElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMenuElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMenuElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMenuElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMenuElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMenuElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMenuElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMenuElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMenuElement, event: Event) => any) | null;
    onplay: ((this: HTMLMenuElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMenuElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMenuElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onreset: ((this: HTMLMenuElement, event: Event) => any) | null;
    onresize: ((this: HTMLMenuElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMenuElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMenuElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMenuElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMenuElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMenuElement, event: Event) => any) | null;
    onselect: ((this: HTMLMenuElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMenuElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMenuElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMenuElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMenuElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMenuElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMenuElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMenuElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMetaElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMetaElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMetaElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMetaElement, event: Event) => any) | null;
    onblur: ((this: HTMLMetaElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMetaElement, event: Event) => any) | null;
    onchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onclick: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMetaElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncut: ((this: HTMLMetaElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMetaElement, event: Event) => any) | null;
    onended: ((this: HTMLMetaElement, event: Event) => any) | null;
    onerror: ((this: HTMLMetaElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMetaElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMetaElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMetaElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMetaElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMetaElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMetaElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMetaElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMetaElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMetaElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMetaElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMetaElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMetaElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMetaElement, event: Event) => any) | null;
    onplay: ((this: HTMLMetaElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMetaElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMetaElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onreset: ((this: HTMLMetaElement, event: Event) => any) | null;
    onresize: ((this: HTMLMetaElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMetaElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMetaElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMetaElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMetaElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMetaElement, event: Event) => any) | null;
    onselect: ((this: HTMLMetaElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMetaElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMetaElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMetaElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMetaElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMetaElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMetaElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMetaElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMeterElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMeterElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMeterElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMeterElement, event: Event) => any) | null;
    onblur: ((this: HTMLMeterElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMeterElement, event: Event) => any) | null;
    onchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onclick: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMeterElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncut: ((this: HTMLMeterElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMeterElement, event: Event) => any) | null;
    onended: ((this: HTMLMeterElement, event: Event) => any) | null;
    onerror: ((this: HTMLMeterElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMeterElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMeterElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMeterElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMeterElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMeterElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMeterElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMeterElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMeterElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMeterElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMeterElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMeterElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMeterElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMeterElement, event: Event) => any) | null;
    onplay: ((this: HTMLMeterElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMeterElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMeterElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onreset: ((this: HTMLMeterElement, event: Event) => any) | null;
    onresize: ((this: HTMLMeterElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMeterElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMeterElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMeterElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMeterElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMeterElement, event: Event) => any) | null;
    onselect: ((this: HTMLMeterElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMeterElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMeterElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMeterElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMeterElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMeterElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMeterElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMeterElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOListElement, event: Event) => any) | null;
    onblur: ((this: HTMLOListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOListElement, event: Event) => any) | null;
    onchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onclick: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOListElement, event: Event) => any) | null;
    oncut: ((this: HTMLOListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOListElement, event: Event) => any) | null;
    onended: ((this: HTMLOListElement, event: Event) => any) | null;
    onerror: ((this: HTMLOListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOListElement, event: Event) => any) | null;
    onplay: ((this: HTMLOListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOListElement, event: Event) => any) | null;
    onreset: ((this: HTMLOListElement, event: Event) => any) | null;
    onresize: ((this: HTMLOListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOListElement, event: Event) => any) | null;
    onselect: ((this: HTMLOListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOptGroupElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOptGroupElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOptGroupElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onblur: ((this: HTMLOptGroupElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onclick: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOptGroupElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncut: ((this: HTMLOptGroupElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onended: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onerror: ((this: HTMLOptGroupElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOptGroupElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOptGroupElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOptGroupElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOptGroupElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOptGroupElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOptGroupElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onplay: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOptGroupElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onreset: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onresize: ((this: HTMLOptGroupElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOptGroupElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onselect: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOptGroupElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOptGroupElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOptionElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOptionElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOptionElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOptionElement, event: Event) => any) | null;
    onblur: ((this: HTMLOptionElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOptionElement, event: Event) => any) | null;
    onchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onclick: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOptionElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncut: ((this: HTMLOptionElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOptionElement, event: Event) => any) | null;
    onended: ((this: HTMLOptionElement, event: Event) => any) | null;
    onerror: ((this: HTMLOptionElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOptionElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOptionElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOptionElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOptionElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOptionElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOptionElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOptionElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOptionElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOptionElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOptionElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOptionElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOptionElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOptionElement, event: Event) => any) | null;
    onplay: ((this: HTMLOptionElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOptionElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOptionElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onreset: ((this: HTMLOptionElement, event: Event) => any) | null;
    onresize: ((this: HTMLOptionElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOptionElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOptionElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOptionElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOptionElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOptionElement, event: Event) => any) | null;
    onselect: ((this: HTMLOptionElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOptionElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOptionElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOptionElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOptionElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOptionElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOptionElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOptionElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOutputElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOutputElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOutputElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOutputElement, event: Event) => any) | null;
    onblur: ((this: HTMLOutputElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOutputElement, event: Event) => any) | null;
    onchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onclick: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOutputElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncut: ((this: HTMLOutputElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOutputElement, event: Event) => any) | null;
    onended: ((this: HTMLOutputElement, event: Event) => any) | null;
    onerror: ((this: HTMLOutputElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOutputElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOutputElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOutputElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOutputElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOutputElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOutputElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOutputElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOutputElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOutputElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOutputElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOutputElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOutputElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOutputElement, event: Event) => any) | null;
    onplay: ((this: HTMLOutputElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOutputElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOutputElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onreset: ((this: HTMLOutputElement, event: Event) => any) | null;
    onresize: ((this: HTMLOutputElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOutputElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOutputElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOutputElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOutputElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOutputElement, event: Event) => any) | null;
    onselect: ((this: HTMLOutputElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOutputElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOutputElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOutputElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOutputElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOutputElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOutputElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOutputElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLParagraphElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLParagraphElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLParagraphElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onblur: ((this: HTMLParagraphElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onclick: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLParagraphElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncut: ((this: HTMLParagraphElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onemptied: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onended: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onerror: ((this: HTMLParagraphElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLParagraphElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLParagraphElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLParagraphElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLParagraphElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLParagraphElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLParagraphElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onplay: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onplaying: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLParagraphElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onreset: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onresize: ((this: HTMLParagraphElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLParagraphElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onseeking: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onselect: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onstalled: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLParagraphElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLParagraphElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLParagraphElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwheel: ((this: HTMLParagraphElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLPictureElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLPictureElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLPictureElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLPictureElement, event: Event) => any) | null;
    onblur: ((this: HTMLPictureElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLPictureElement, event: Event) => any) | null;
    onchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onclick: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLPictureElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncut: ((this: HTMLPictureElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onemptied: ((this: HTMLPictureElement, event: Event) => any) | null;
    onended: ((this: HTMLPictureElement, event: Event) => any) | null;
    onerror: ((this: HTMLPictureElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLPictureElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLPictureElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLPictureElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLPictureElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLPictureElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLPictureElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLPictureElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLPictureElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLPictureElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLPictureElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLPictureElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLPictureElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLPictureElement, event: Event) => any) | null;
    onplay: ((this: HTMLPictureElement, event: Event) => any) | null;
    onplaying: ((this: HTMLPictureElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLPictureElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onreset: ((this: HTMLPictureElement, event: Event) => any) | null;
    onresize: ((this: HTMLPictureElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLPictureElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLPictureElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLPictureElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLPictureElement, event: Event) => any) | null;
    onseeking: ((this: HTMLPictureElement, event: Event) => any) | null;
    onselect: ((this: HTMLPictureElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLPictureElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onstalled: ((this: HTMLPictureElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLPictureElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLPictureElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLPictureElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLPictureElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwheel: ((this: HTMLPictureElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLPreElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLPreElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLPreElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLPreElement, event: Event) => any) | null;
    onblur: ((this: HTMLPreElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLPreElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLPreElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLPreElement, event: Event) => any) | null;
    onchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onclick: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLPreElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLPreElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLPreElement, event: Event) => any) | null;
    oncut: ((this: HTMLPreElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onemptied: ((this: HTMLPreElement, event: Event) => any) | null;
    onended: ((this: HTMLPreElement, event: Event) => any) | null;
    onerror: ((this: HTMLPreElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLPreElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLPreElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLPreElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLPreElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLPreElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLPreElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLPreElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLPreElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLPreElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLPreElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLPreElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLPreElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLPreElement, event: Event) => any) | null;
    onplay: ((this: HTMLPreElement, event: Event) => any) | null;
    onplaying: ((this: HTMLPreElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLPreElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLPreElement, event: Event) => any) | null;
    onreset: ((this: HTMLPreElement, event: Event) => any) | null;
    onresize: ((this: HTMLPreElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLPreElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLPreElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLPreElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLPreElement, event: Event) => any) | null;
    onseeking: ((this: HTMLPreElement, event: Event) => any) | null;
    onselect: ((this: HTMLPreElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLPreElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onstalled: ((this: HTMLPreElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLPreElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLPreElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLPreElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLPreElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLPreElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLPreElement, event: Event) => any) | null;
    onwheel: ((this: HTMLPreElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLScriptElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLScriptElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLScriptElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLScriptElement, event: Event) => any) | null;
    onblur: ((this: HTMLScriptElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLScriptElement, event: Event) => any) | null;
    onchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onclick: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLScriptElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncut: ((this: HTMLScriptElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onemptied: ((this: HTMLScriptElement, event: Event) => any) | null;
    onended: ((this: HTMLScriptElement, event: Event) => any) | null;
    onerror: ((this: HTMLScriptElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLScriptElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLScriptElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLScriptElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLScriptElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLScriptElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLScriptElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLScriptElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLScriptElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLScriptElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLScriptElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLScriptElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLScriptElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLScriptElement, event: Event) => any) | null;
    onplay: ((this: HTMLScriptElement, event: Event) => any) | null;
    onplaying: ((this: HTMLScriptElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLScriptElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onreset: ((this: HTMLScriptElement, event: Event) => any) | null;
    onresize: ((this: HTMLScriptElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLScriptElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLScriptElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLScriptElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLScriptElement, event: Event) => any) | null;
    onseeking: ((this: HTMLScriptElement, event: Event) => any) | null;
    onselect: ((this: HTMLScriptElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLScriptElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onstalled: ((this: HTMLScriptElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLScriptElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLScriptElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLScriptElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLScriptElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwheel: ((this: HTMLScriptElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSourceElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSourceElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSourceElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSourceElement, event: Event) => any) | null;
    onblur: ((this: HTMLSourceElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSourceElement, event: Event) => any) | null;
    onchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onclick: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSourceElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncut: ((this: HTMLSourceElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSourceElement, event: Event) => any) | null;
    onended: ((this: HTMLSourceElement, event: Event) => any) | null;
    onerror: ((this: HTMLSourceElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSourceElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSourceElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSourceElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSourceElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSourceElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSourceElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSourceElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSourceElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSourceElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSourceElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSourceElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSourceElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSourceElement, event: Event) => any) | null;
    onplay: ((this: HTMLSourceElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSourceElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSourceElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onreset: ((this: HTMLSourceElement, event: Event) => any) | null;
    onresize: ((this: HTMLSourceElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSourceElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSourceElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSourceElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSourceElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSourceElement, event: Event) => any) | null;
    onselect: ((this: HTMLSourceElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSourceElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSourceElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSourceElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSourceElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSourceElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSourceElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSourceElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSpanElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSpanElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSpanElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSpanElement, event: Event) => any) | null;
    onblur: ((this: HTMLSpanElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSpanElement, event: Event) => any) | null;
    onchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onclick: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSpanElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncut: ((this: HTMLSpanElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSpanElement, event: Event) => any) | null;
    onended: ((this: HTMLSpanElement, event: Event) => any) | null;
    onerror: ((this: HTMLSpanElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSpanElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSpanElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSpanElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSpanElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSpanElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSpanElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSpanElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSpanElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSpanElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSpanElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSpanElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSpanElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSpanElement, event: Event) => any) | null;
    onplay: ((this: HTMLSpanElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSpanElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSpanElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onreset: ((this: HTMLSpanElement, event: Event) => any) | null;
    onresize: ((this: HTMLSpanElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSpanElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSpanElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSpanElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSpanElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSpanElement, event: Event) => any) | null;
    onselect: ((this: HTMLSpanElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSpanElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSpanElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSpanElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSpanElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSpanElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSpanElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSpanElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLStyleElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLStyleElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLStyleElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLStyleElement, event: Event) => any) | null;
    onblur: ((this: HTMLStyleElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLStyleElement, event: Event) => any) | null;
    onchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onclick: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLStyleElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncut: ((this: HTMLStyleElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onemptied: ((this: HTMLStyleElement, event: Event) => any) | null;
    onended: ((this: HTMLStyleElement, event: Event) => any) | null;
    onerror: ((this: HTMLStyleElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLStyleElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLStyleElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLStyleElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLStyleElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLStyleElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLStyleElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLStyleElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLStyleElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLStyleElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLStyleElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLStyleElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLStyleElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLStyleElement, event: Event) => any) | null;
    onplay: ((this: HTMLStyleElement, event: Event) => any) | null;
    onplaying: ((this: HTMLStyleElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLStyleElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onreset: ((this: HTMLStyleElement, event: Event) => any) | null;
    onresize: ((this: HTMLStyleElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLStyleElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLStyleElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLStyleElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLStyleElement, event: Event) => any) | null;
    onseeking: ((this: HTMLStyleElement, event: Event) => any) | null;
    onselect: ((this: HTMLStyleElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLStyleElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onstalled: ((this: HTMLStyleElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLStyleElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLStyleElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLStyleElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLStyleElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwheel: ((this: HTMLStyleElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableElement, event: Event) => any) | null;
    onended: ((this: HTMLTableElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableSectionElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableSectionElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableSectionElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableSectionElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableSectionElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableSectionElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onended: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableSectionElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableSectionElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableSectionElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableSectionElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableSectionElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableSectionElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableSectionElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableSectionElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableSectionElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableSectionElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableSectionElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableSectionElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableCellElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableCellElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableCellElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableCellElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableCellElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableCellElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onended: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableCellElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableCellElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableCellElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableCellElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableCellElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableCellElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableCellElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableCellElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableCellElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableCellElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableCellElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableCellElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableCellElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableCellElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTemplateElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTemplateElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTemplateElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onblur: ((this: HTMLTemplateElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onclick: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTemplateElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncut: ((this: HTMLTemplateElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onended: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onerror: ((this: HTMLTemplateElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTemplateElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTemplateElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTemplateElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTemplateElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTemplateElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTemplateElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onplay: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTemplateElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onreset: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onresize: ((this: HTMLTemplateElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTemplateElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onselect: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTemplateElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTemplateElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTemplateElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTemplateElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTextAreaElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTextAreaElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTextAreaElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onblur: ((this: HTMLTextAreaElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onclick: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTextAreaElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncut: ((this: HTMLTextAreaElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onended: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onerror: ((this: HTMLTextAreaElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTextAreaElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTextAreaElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTextAreaElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTextAreaElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTextAreaElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTextAreaElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onplay: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTextAreaElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onreset: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onresize: ((this: HTMLTextAreaElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTextAreaElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onselect: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTextAreaElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTextAreaElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTimeElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTimeElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTimeElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTimeElement, event: Event) => any) | null;
    onblur: ((this: HTMLTimeElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTimeElement, event: Event) => any) | null;
    onchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onclick: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTimeElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncut: ((this: HTMLTimeElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTimeElement, event: Event) => any) | null;
    onended: ((this: HTMLTimeElement, event: Event) => any) | null;
    onerror: ((this: HTMLTimeElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTimeElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTimeElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTimeElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTimeElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTimeElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTimeElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTimeElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTimeElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTimeElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTimeElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTimeElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTimeElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTimeElement, event: Event) => any) | null;
    onplay: ((this: HTMLTimeElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTimeElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTimeElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onreset: ((this: HTMLTimeElement, event: Event) => any) | null;
    onresize: ((this: HTMLTimeElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTimeElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTimeElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTimeElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTimeElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTimeElement, event: Event) => any) | null;
    onselect: ((this: HTMLTimeElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTimeElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTimeElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTimeElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTimeElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTimeElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTimeElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTimeElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTitleElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTitleElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTitleElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTitleElement, event: Event) => any) | null;
    onblur: ((this: HTMLTitleElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTitleElement, event: Event) => any) | null;
    onchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onclick: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTitleElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncut: ((this: HTMLTitleElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTitleElement, event: Event) => any) | null;
    onended: ((this: HTMLTitleElement, event: Event) => any) | null;
    onerror: ((this: HTMLTitleElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTitleElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTitleElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTitleElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTitleElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTitleElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTitleElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTitleElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTitleElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTitleElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTitleElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTitleElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTitleElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTitleElement, event: Event) => any) | null;
    onplay: ((this: HTMLTitleElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTitleElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTitleElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onreset: ((this: HTMLTitleElement, event: Event) => any) | null;
    onresize: ((this: HTMLTitleElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTitleElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTitleElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTitleElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTitleElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTitleElement, event: Event) => any) | null;
    onselect: ((this: HTMLTitleElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTitleElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTitleElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTitleElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTitleElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTitleElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTitleElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTitleElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableRowElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableRowElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableRowElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableRowElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableRowElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableRowElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onended: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableRowElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableRowElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableRowElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableRowElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableRowElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableRowElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableRowElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableRowElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableRowElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableRowElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableRowElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableRowElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableRowElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableRowElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTrackElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTrackElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTrackElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTrackElement, event: Event) => any) | null;
    onblur: ((this: HTMLTrackElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTrackElement, event: Event) => any) | null;
    onchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onclick: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTrackElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncut: ((this: HTMLTrackElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTrackElement, event: Event) => any) | null;
    onended: ((this: HTMLTrackElement, event: Event) => any) | null;
    onerror: ((this: HTMLTrackElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTrackElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTrackElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTrackElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTrackElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTrackElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTrackElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTrackElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTrackElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTrackElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTrackElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTrackElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTrackElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTrackElement, event: Event) => any) | null;
    onplay: ((this: HTMLTrackElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTrackElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTrackElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onreset: ((this: HTMLTrackElement, event: Event) => any) | null;
    onresize: ((this: HTMLTrackElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTrackElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTrackElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTrackElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTrackElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTrackElement, event: Event) => any) | null;
    onselect: ((this: HTMLTrackElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTrackElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTrackElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTrackElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTrackElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTrackElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTrackElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTrackElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLUListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLUListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLUListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLUListElement, event: Event) => any) | null;
    onblur: ((this: HTMLUListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLUListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLUListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLUListElement, event: Event) => any) | null;
    onchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onclick: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLUListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLUListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLUListElement, event: Event) => any) | null;
    oncut: ((this: HTMLUListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLUListElement, event: Event) => any) | null;
    onended: ((this: HTMLUListElement, event: Event) => any) | null;
    onerror: ((this: HTMLUListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLUListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLUListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLUListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLUListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLUListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLUListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLUListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLUListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLUListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLUListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLUListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLUListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLUListElement, event: Event) => any) | null;
    onplay: ((this: HTMLUListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLUListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLUListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLUListElement, event: Event) => any) | null;
    onreset: ((this: HTMLUListElement, event: Event) => any) | null;
    onresize: ((this: HTMLUListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLUListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLUListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLUListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLUListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLUListElement, event: Event) => any) | null;
    onselect: ((this: HTMLUListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLUListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLUListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLUListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLUListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLUListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLUListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLUListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLUListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLUListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLVideoElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLVideoElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLVideoElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLVideoElement, event: Event) => any) | null;
    onblur: ((this: HTMLVideoElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLVideoElement, event: Event) => any) | null;
    onchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onclick: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLVideoElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncut: ((this: HTMLVideoElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onemptied: ((this: HTMLVideoElement, event: Event) => any) | null;
    onended: ((this: HTMLVideoElement, event: Event) => any) | null;
    onerror: ((this: HTMLVideoElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLVideoElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLVideoElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLVideoElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLVideoElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLVideoElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLVideoElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLVideoElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLVideoElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLVideoElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLVideoElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLVideoElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLVideoElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLVideoElement, event: Event) => any) | null;
    onplay: ((this: HTMLVideoElement, event: Event) => any) | null;
    onplaying: ((this: HTMLVideoElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLVideoElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onreset: ((this: HTMLVideoElement, event: Event) => any) | null;
    onresize: ((this: HTMLVideoElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLVideoElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLVideoElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLVideoElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLVideoElement, event: Event) => any) | null;
    onseeking: ((this: HTMLVideoElement, event: Event) => any) | null;
    onselect: ((this: HTMLVideoElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLVideoElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onstalled: ((this: HTMLVideoElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLVideoElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLVideoElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLVideoElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLVideoElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwheel: ((this: HTMLVideoElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | [ChildTags[] | undefined];
export declare const jsxs: <T extends {
    children?: ChildTags[] | undefined;
}>(tagName: AIUIJSXTag, attrs: T) => Element | (Omit<HTMLObjectElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLObjectElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLObjectElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLObjectElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLObjectElement, event: Event) => any) | null;
    onblur: ((this: HTMLObjectElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLObjectElement, event: Event) => any) | null;
    onchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onclick: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLObjectElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLObjectElement, event: Event) => any) | null;
    oncut: ((this: HTMLObjectElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLObjectElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onemptied: ((this: HTMLObjectElement, event: Event) => any) | null;
    onended: ((this: HTMLObjectElement, event: Event) => any) | null;
    onerror: ((this: HTMLObjectElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLObjectElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLObjectElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLObjectElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLObjectElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLObjectElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLObjectElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLObjectElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLObjectElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLObjectElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLObjectElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLObjectElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLObjectElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLObjectElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLObjectElement, event: Event) => any) | null;
    onplay: ((this: HTMLObjectElement, event: Event) => any) | null;
    onplaying: ((this: HTMLObjectElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLObjectElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLObjectElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onreset: ((this: HTMLObjectElement, event: Event) => any) | null;
    onresize: ((this: HTMLObjectElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLObjectElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLObjectElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLObjectElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLObjectElement, event: Event) => any) | null;
    onseeking: ((this: HTMLObjectElement, event: Event) => any) | null;
    onselect: ((this: HTMLObjectElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLObjectElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onstalled: ((this: HTMLObjectElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLObjectElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLObjectElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLObjectElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLObjectElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLObjectElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLObjectElement, event: Event) => any) | null;
    onwheel: ((this: HTMLObjectElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLElement, event: Event) => any) | null;
    onblur: ((this: HTMLElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLElement, event: Event) => any) | null;
    onchange: ((this: HTMLElement, event: Event) => any) | null;
    onclick: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLElement, event: Event) => any) | null;
    oncut: ((this: HTMLElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLElement, event: Event) => any) | null;
    onemptied: ((this: HTMLElement, event: Event) => any) | null;
    onended: ((this: HTMLElement, event: Event) => any) | null;
    onerror: ((this: HTMLElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLElement, event: Event) => any) | null;
    onplay: ((this: HTMLElement, event: Event) => any) | null;
    onplaying: ((this: HTMLElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLElement, event: Event) => any) | null;
    onreset: ((this: HTMLElement, event: Event) => any) | null;
    onresize: ((this: HTMLElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLElement, event: Event) => any) | null;
    onseeking: ((this: HTMLElement, event: Event) => any) | null;
    onselect: ((this: HTMLElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLElement, event: Event) => any) | null;
    onstalled: ((this: HTMLElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLElement, event: Event) => any) | null;
    onwheel: ((this: HTMLElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSlotElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSlotElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSlotElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSlotElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSlotElement, event: Event) => any) | null;
    onblur: ((this: HTMLSlotElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSlotElement, event: Event) => any) | null;
    onchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onclick: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSlotElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSlotElement, event: Event) => any) | null;
    oncut: ((this: HTMLSlotElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSlotElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSlotElement, event: Event) => any) | null;
    onended: ((this: HTMLSlotElement, event: Event) => any) | null;
    onerror: ((this: HTMLSlotElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSlotElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSlotElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSlotElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSlotElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSlotElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSlotElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSlotElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSlotElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSlotElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSlotElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSlotElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSlotElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSlotElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSlotElement, event: Event) => any) | null;
    onplay: ((this: HTMLSlotElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSlotElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSlotElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSlotElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onreset: ((this: HTMLSlotElement, event: Event) => any) | null;
    onresize: ((this: HTMLSlotElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSlotElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSlotElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSlotElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSlotElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSlotElement, event: Event) => any) | null;
    onselect: ((this: HTMLSlotElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSlotElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSlotElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSlotElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSlotElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSlotElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSlotElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSlotElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSlotElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSlotElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLInputElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLInputElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLInputElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLInputElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLInputElement, event: Event) => any) | null;
    onblur: ((this: HTMLInputElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLInputElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLInputElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLInputElement, event: Event) => any) | null;
    onchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onclick: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLInputElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLInputElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLInputElement, event: Event) => any) | null;
    oncut: ((this: HTMLInputElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLInputElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onemptied: ((this: HTMLInputElement, event: Event) => any) | null;
    onended: ((this: HTMLInputElement, event: Event) => any) | null;
    onerror: ((this: HTMLInputElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLInputElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLInputElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLInputElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLInputElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLInputElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLInputElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLInputElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLInputElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLInputElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLInputElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLInputElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLInputElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLInputElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLInputElement, event: Event) => any) | null;
    onplay: ((this: HTMLInputElement, event: Event) => any) | null;
    onplaying: ((this: HTMLInputElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLInputElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLInputElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLInputElement, event: Event) => any) | null;
    onreset: ((this: HTMLInputElement, event: Event) => any) | null;
    onresize: ((this: HTMLInputElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLInputElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLInputElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLInputElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLInputElement, event: Event) => any) | null;
    onseeking: ((this: HTMLInputElement, event: Event) => any) | null;
    onselect: ((this: HTMLInputElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLInputElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLInputElement, event: Event) => any) | null;
    onstalled: ((this: HTMLInputElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLInputElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLInputElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLInputElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLInputElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLInputElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLInputElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLInputElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLInputElement, event: Event) => any) | null;
    onwheel: ((this: HTMLInputElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLProgressElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLProgressElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLProgressElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLProgressElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLProgressElement, event: Event) => any) | null;
    onblur: ((this: HTMLProgressElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLProgressElement, event: Event) => any) | null;
    onchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onclick: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLProgressElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLProgressElement, event: Event) => any) | null;
    oncut: ((this: HTMLProgressElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLProgressElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onemptied: ((this: HTMLProgressElement, event: Event) => any) | null;
    onended: ((this: HTMLProgressElement, event: Event) => any) | null;
    onerror: ((this: HTMLProgressElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLProgressElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLProgressElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLProgressElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLProgressElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLProgressElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLProgressElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLProgressElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLProgressElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLProgressElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLProgressElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLProgressElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLProgressElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLProgressElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLProgressElement, event: Event) => any) | null;
    onplay: ((this: HTMLProgressElement, event: Event) => any) | null;
    onplaying: ((this: HTMLProgressElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLProgressElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLProgressElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onreset: ((this: HTMLProgressElement, event: Event) => any) | null;
    onresize: ((this: HTMLProgressElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLProgressElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLProgressElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLProgressElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLProgressElement, event: Event) => any) | null;
    onseeking: ((this: HTMLProgressElement, event: Event) => any) | null;
    onselect: ((this: HTMLProgressElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLProgressElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onstalled: ((this: HTMLProgressElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLProgressElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLProgressElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLProgressElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLProgressElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLProgressElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLProgressElement, event: Event) => any) | null;
    onwheel: ((this: HTMLProgressElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSelectElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSelectElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSelectElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSelectElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSelectElement, event: Event) => any) | null;
    onblur: ((this: HTMLSelectElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSelectElement, event: Event) => any) | null;
    onchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onclick: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSelectElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSelectElement, event: Event) => any) | null;
    oncut: ((this: HTMLSelectElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSelectElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSelectElement, event: Event) => any) | null;
    onended: ((this: HTMLSelectElement, event: Event) => any) | null;
    onerror: ((this: HTMLSelectElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSelectElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSelectElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSelectElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSelectElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSelectElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSelectElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSelectElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSelectElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSelectElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSelectElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSelectElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSelectElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSelectElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSelectElement, event: Event) => any) | null;
    onplay: ((this: HTMLSelectElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSelectElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSelectElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSelectElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onreset: ((this: HTMLSelectElement, event: Event) => any) | null;
    onresize: ((this: HTMLSelectElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSelectElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSelectElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSelectElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSelectElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSelectElement, event: Event) => any) | null;
    onselect: ((this: HTMLSelectElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSelectElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSelectElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSelectElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSelectElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSelectElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSelectElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSelectElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSelectElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSelectElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMapElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMapElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMapElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMapElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMapElement, event: Event) => any) | null;
    onblur: ((this: HTMLMapElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMapElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMapElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMapElement, event: Event) => any) | null;
    onchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onclick: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMapElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMapElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMapElement, event: Event) => any) | null;
    oncut: ((this: HTMLMapElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMapElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMapElement, event: Event) => any) | null;
    onended: ((this: HTMLMapElement, event: Event) => any) | null;
    onerror: ((this: HTMLMapElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMapElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMapElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMapElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMapElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMapElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMapElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMapElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMapElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMapElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMapElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMapElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMapElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMapElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMapElement, event: Event) => any) | null;
    onplay: ((this: HTMLMapElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMapElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMapElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMapElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMapElement, event: Event) => any) | null;
    onreset: ((this: HTMLMapElement, event: Event) => any) | null;
    onresize: ((this: HTMLMapElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMapElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMapElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMapElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMapElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMapElement, event: Event) => any) | null;
    onselect: ((this: HTMLMapElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMapElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMapElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMapElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMapElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMapElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMapElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMapElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMapElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMapElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMapElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMapElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMapElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLAnchorElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLAnchorElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLAnchorElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLAnchorElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onblur: ((this: HTMLAnchorElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onclick: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLAnchorElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oncut: ((this: HTMLAnchorElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLAnchorElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onemptied: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onended: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onerror: ((this: HTMLAnchorElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLAnchorElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLAnchorElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLAnchorElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLAnchorElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLAnchorElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLAnchorElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLAnchorElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLAnchorElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onplay: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onplaying: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLAnchorElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLAnchorElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onreset: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onresize: ((this: HTMLAnchorElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLAnchorElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onseeking: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onselect: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onstalled: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLAnchorElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLAnchorElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLAnchorElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLAnchorElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLAnchorElement, event: Event) => any) | null;
    onwheel: ((this: HTMLAnchorElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLAreaElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLAreaElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLAreaElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLAreaElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLAreaElement, event: Event) => any) | null;
    onblur: ((this: HTMLAreaElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLAreaElement, event: Event) => any) | null;
    onchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onclick: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLAreaElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLAreaElement, event: Event) => any) | null;
    oncut: ((this: HTMLAreaElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLAreaElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onemptied: ((this: HTMLAreaElement, event: Event) => any) | null;
    onended: ((this: HTMLAreaElement, event: Event) => any) | null;
    onerror: ((this: HTMLAreaElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLAreaElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLAreaElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLAreaElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLAreaElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLAreaElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLAreaElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLAreaElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLAreaElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLAreaElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLAreaElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLAreaElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLAreaElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLAreaElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLAreaElement, event: Event) => any) | null;
    onplay: ((this: HTMLAreaElement, event: Event) => any) | null;
    onplaying: ((this: HTMLAreaElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLAreaElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLAreaElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onreset: ((this: HTMLAreaElement, event: Event) => any) | null;
    onresize: ((this: HTMLAreaElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLAreaElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLAreaElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLAreaElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLAreaElement, event: Event) => any) | null;
    onseeking: ((this: HTMLAreaElement, event: Event) => any) | null;
    onselect: ((this: HTMLAreaElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLAreaElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onstalled: ((this: HTMLAreaElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLAreaElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLAreaElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLAreaElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLAreaElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLAreaElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLAreaElement, event: Event) => any) | null;
    onwheel: ((this: HTMLAreaElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLAudioElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLAudioElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLAudioElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLAudioElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLAudioElement, event: Event) => any) | null;
    onblur: ((this: HTMLAudioElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLAudioElement, event: Event) => any) | null;
    onchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onclick: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLAudioElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLAudioElement, event: Event) => any) | null;
    oncut: ((this: HTMLAudioElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLAudioElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onemptied: ((this: HTMLAudioElement, event: Event) => any) | null;
    onended: ((this: HTMLAudioElement, event: Event) => any) | null;
    onerror: ((this: HTMLAudioElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLAudioElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLAudioElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLAudioElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLAudioElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLAudioElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLAudioElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLAudioElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLAudioElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLAudioElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLAudioElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLAudioElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLAudioElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLAudioElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLAudioElement, event: Event) => any) | null;
    onplay: ((this: HTMLAudioElement, event: Event) => any) | null;
    onplaying: ((this: HTMLAudioElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLAudioElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLAudioElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onreset: ((this: HTMLAudioElement, event: Event) => any) | null;
    onresize: ((this: HTMLAudioElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLAudioElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLAudioElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLAudioElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLAudioElement, event: Event) => any) | null;
    onseeking: ((this: HTMLAudioElement, event: Event) => any) | null;
    onselect: ((this: HTMLAudioElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLAudioElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onstalled: ((this: HTMLAudioElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLAudioElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLAudioElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLAudioElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLAudioElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLAudioElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLAudioElement, event: Event) => any) | null;
    onwheel: ((this: HTMLAudioElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLBaseElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLBaseElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLBaseElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLBaseElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLBaseElement, event: Event) => any) | null;
    onblur: ((this: HTMLBaseElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLBaseElement, event: Event) => any) | null;
    onchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onclick: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLBaseElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLBaseElement, event: Event) => any) | null;
    oncut: ((this: HTMLBaseElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLBaseElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onemptied: ((this: HTMLBaseElement, event: Event) => any) | null;
    onended: ((this: HTMLBaseElement, event: Event) => any) | null;
    onerror: ((this: HTMLBaseElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLBaseElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLBaseElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLBaseElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLBaseElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLBaseElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLBaseElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLBaseElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLBaseElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLBaseElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLBaseElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLBaseElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLBaseElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLBaseElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLBaseElement, event: Event) => any) | null;
    onplay: ((this: HTMLBaseElement, event: Event) => any) | null;
    onplaying: ((this: HTMLBaseElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLBaseElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLBaseElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onreset: ((this: HTMLBaseElement, event: Event) => any) | null;
    onresize: ((this: HTMLBaseElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLBaseElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLBaseElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLBaseElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLBaseElement, event: Event) => any) | null;
    onseeking: ((this: HTMLBaseElement, event: Event) => any) | null;
    onselect: ((this: HTMLBaseElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLBaseElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onstalled: ((this: HTMLBaseElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLBaseElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLBaseElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLBaseElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLBaseElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLBaseElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLBaseElement, event: Event) => any) | null;
    onwheel: ((this: HTMLBaseElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLQuoteElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLQuoteElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLQuoteElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLQuoteElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onblur: ((this: HTMLQuoteElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onclick: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLQuoteElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oncut: ((this: HTMLQuoteElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLQuoteElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onemptied: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onended: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onerror: ((this: HTMLQuoteElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLQuoteElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLQuoteElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLQuoteElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLQuoteElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLQuoteElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLQuoteElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLQuoteElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLQuoteElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onplay: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onplaying: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLQuoteElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLQuoteElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onreset: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onresize: ((this: HTMLQuoteElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLQuoteElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onseeking: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onselect: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onstalled: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLQuoteElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLQuoteElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLQuoteElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLQuoteElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLQuoteElement, event: Event) => any) | null;
    onwheel: ((this: HTMLQuoteElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLBodyElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLBodyElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLBodyElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLBodyElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLBodyElement, event: Event) => any) | null;
    onblur: ((this: HTMLBodyElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLBodyElement, event: Event) => any) | null;
    onchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onclick: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLBodyElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLBodyElement, event: Event) => any) | null;
    oncut: ((this: HTMLBodyElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLBodyElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onemptied: ((this: HTMLBodyElement, event: Event) => any) | null;
    onended: ((this: HTMLBodyElement, event: Event) => any) | null;
    onerror: ((this: HTMLBodyElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLBodyElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLBodyElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLBodyElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLBodyElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLBodyElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLBodyElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLBodyElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLBodyElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLBodyElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLBodyElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLBodyElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLBodyElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLBodyElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLBodyElement, event: Event) => any) | null;
    onplay: ((this: HTMLBodyElement, event: Event) => any) | null;
    onplaying: ((this: HTMLBodyElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLBodyElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLBodyElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onreset: ((this: HTMLBodyElement, event: Event) => any) | null;
    onresize: ((this: HTMLBodyElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLBodyElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLBodyElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLBodyElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLBodyElement, event: Event) => any) | null;
    onseeking: ((this: HTMLBodyElement, event: Event) => any) | null;
    onselect: ((this: HTMLBodyElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLBodyElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onstalled: ((this: HTMLBodyElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLBodyElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLBodyElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLBodyElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLBodyElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLBodyElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLBodyElement, event: Event) => any) | null;
    onwheel: ((this: HTMLBodyElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLBRElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLBRElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLBRElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLBRElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLBRElement, event: Event) => any) | null;
    onblur: ((this: HTMLBRElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLBRElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLBRElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLBRElement, event: Event) => any) | null;
    onchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onclick: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLBRElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLBRElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLBRElement, event: Event) => any) | null;
    oncut: ((this: HTMLBRElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLBRElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onemptied: ((this: HTMLBRElement, event: Event) => any) | null;
    onended: ((this: HTMLBRElement, event: Event) => any) | null;
    onerror: ((this: HTMLBRElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLBRElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLBRElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLBRElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLBRElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLBRElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLBRElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLBRElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLBRElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLBRElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLBRElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLBRElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLBRElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLBRElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLBRElement, event: Event) => any) | null;
    onplay: ((this: HTMLBRElement, event: Event) => any) | null;
    onplaying: ((this: HTMLBRElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLBRElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLBRElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLBRElement, event: Event) => any) | null;
    onreset: ((this: HTMLBRElement, event: Event) => any) | null;
    onresize: ((this: HTMLBRElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLBRElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLBRElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLBRElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLBRElement, event: Event) => any) | null;
    onseeking: ((this: HTMLBRElement, event: Event) => any) | null;
    onselect: ((this: HTMLBRElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLBRElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLBRElement, event: Event) => any) | null;
    onstalled: ((this: HTMLBRElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLBRElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLBRElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLBRElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLBRElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLBRElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLBRElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLBRElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLBRElement, event: Event) => any) | null;
    onwheel: ((this: HTMLBRElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLButtonElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLButtonElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLButtonElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLButtonElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLButtonElement, event: Event) => any) | null;
    onblur: ((this: HTMLButtonElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLButtonElement, event: Event) => any) | null;
    onchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onclick: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLButtonElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLButtonElement, event: Event) => any) | null;
    oncut: ((this: HTMLButtonElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLButtonElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onemptied: ((this: HTMLButtonElement, event: Event) => any) | null;
    onended: ((this: HTMLButtonElement, event: Event) => any) | null;
    onerror: ((this: HTMLButtonElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLButtonElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLButtonElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLButtonElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLButtonElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLButtonElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLButtonElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLButtonElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLButtonElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLButtonElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLButtonElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLButtonElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLButtonElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLButtonElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLButtonElement, event: Event) => any) | null;
    onplay: ((this: HTMLButtonElement, event: Event) => any) | null;
    onplaying: ((this: HTMLButtonElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLButtonElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLButtonElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onreset: ((this: HTMLButtonElement, event: Event) => any) | null;
    onresize: ((this: HTMLButtonElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLButtonElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLButtonElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLButtonElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLButtonElement, event: Event) => any) | null;
    onseeking: ((this: HTMLButtonElement, event: Event) => any) | null;
    onselect: ((this: HTMLButtonElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLButtonElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onstalled: ((this: HTMLButtonElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLButtonElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLButtonElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLButtonElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLButtonElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLButtonElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLButtonElement, event: Event) => any) | null;
    onwheel: ((this: HTMLButtonElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLCanvasElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLCanvasElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLCanvasElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLCanvasElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onblur: ((this: HTMLCanvasElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onclick: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLCanvasElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oncut: ((this: HTMLCanvasElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLCanvasElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onemptied: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onended: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onerror: ((this: HTMLCanvasElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLCanvasElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLCanvasElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLCanvasElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLCanvasElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLCanvasElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLCanvasElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLCanvasElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLCanvasElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onplay: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onplaying: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLCanvasElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLCanvasElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onreset: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onresize: ((this: HTMLCanvasElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLCanvasElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onseeking: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onselect: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onstalled: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLCanvasElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLCanvasElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLCanvasElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLCanvasElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLCanvasElement, event: Event) => any) | null;
    onwheel: ((this: HTMLCanvasElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableCaptionElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableCaptionElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableCaptionElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableCaptionElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableCaptionElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableCaptionElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableCaptionElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableCaptionElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onended: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableCaptionElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableCaptionElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableCaptionElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableCaptionElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableCaptionElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableCaptionElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableCaptionElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableCaptionElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableCaptionElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableCaptionElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableCaptionElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableCaptionElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableCaptionElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableCaptionElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableCaptionElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableCaptionElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableColElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableColElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableColElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableColElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableColElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableColElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableColElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableColElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableColElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableColElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableColElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableColElement, event: Event) => any) | null;
    onended: ((this: HTMLTableColElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableColElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableColElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableColElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableColElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableColElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableColElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableColElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableColElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableColElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableColElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableColElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableColElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableColElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableColElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableColElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableColElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableColElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableColElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableColElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableColElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableColElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableColElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableColElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableColElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableColElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableColElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableColElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableColElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableColElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableColElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableColElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableColElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableColElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableColElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableColElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableColElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDataElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDataElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDataElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDataElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDataElement, event: Event) => any) | null;
    onblur: ((this: HTMLDataElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDataElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDataElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDataElement, event: Event) => any) | null;
    onchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onclick: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDataElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDataElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDataElement, event: Event) => any) | null;
    oncut: ((this: HTMLDataElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDataElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDataElement, event: Event) => any) | null;
    onended: ((this: HTMLDataElement, event: Event) => any) | null;
    onerror: ((this: HTMLDataElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDataElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDataElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDataElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDataElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDataElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDataElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDataElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDataElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDataElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDataElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDataElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDataElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDataElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDataElement, event: Event) => any) | null;
    onplay: ((this: HTMLDataElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDataElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDataElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDataElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDataElement, event: Event) => any) | null;
    onreset: ((this: HTMLDataElement, event: Event) => any) | null;
    onresize: ((this: HTMLDataElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDataElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDataElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDataElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDataElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDataElement, event: Event) => any) | null;
    onselect: ((this: HTMLDataElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDataElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDataElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDataElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDataElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDataElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDataElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDataElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDataElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDataElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDataElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDataElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDataElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDataListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDataListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDataListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDataListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDataListElement, event: Event) => any) | null;
    onblur: ((this: HTMLDataListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDataListElement, event: Event) => any) | null;
    onchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onclick: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDataListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDataListElement, event: Event) => any) | null;
    oncut: ((this: HTMLDataListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDataListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDataListElement, event: Event) => any) | null;
    onended: ((this: HTMLDataListElement, event: Event) => any) | null;
    onerror: ((this: HTMLDataListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDataListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDataListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDataListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDataListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDataListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDataListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDataListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDataListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDataListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDataListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDataListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDataListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDataListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDataListElement, event: Event) => any) | null;
    onplay: ((this: HTMLDataListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDataListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDataListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDataListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onreset: ((this: HTMLDataListElement, event: Event) => any) | null;
    onresize: ((this: HTMLDataListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDataListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDataListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDataListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDataListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDataListElement, event: Event) => any) | null;
    onselect: ((this: HTMLDataListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDataListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDataListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDataListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDataListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDataListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDataListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDataListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDataListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDataListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLModElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLModElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLModElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLModElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLModElement, event: Event) => any) | null;
    onblur: ((this: HTMLModElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLModElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLModElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLModElement, event: Event) => any) | null;
    onchange: ((this: HTMLModElement, event: Event) => any) | null;
    onclick: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLModElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLModElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLModElement, event: Event) => any) | null;
    oncut: ((this: HTMLModElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLModElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLModElement, event: Event) => any) | null;
    onemptied: ((this: HTMLModElement, event: Event) => any) | null;
    onended: ((this: HTMLModElement, event: Event) => any) | null;
    onerror: ((this: HTMLModElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLModElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLModElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLModElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLModElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLModElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLModElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLModElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLModElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLModElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLModElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLModElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLModElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLModElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLModElement, event: Event) => any) | null;
    onplay: ((this: HTMLModElement, event: Event) => any) | null;
    onplaying: ((this: HTMLModElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLModElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLModElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLModElement, event: Event) => any) | null;
    onreset: ((this: HTMLModElement, event: Event) => any) | null;
    onresize: ((this: HTMLModElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLModElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLModElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLModElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLModElement, event: Event) => any) | null;
    onseeking: ((this: HTMLModElement, event: Event) => any) | null;
    onselect: ((this: HTMLModElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLModElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLModElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLModElement, event: Event) => any) | null;
    onstalled: ((this: HTMLModElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLModElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLModElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLModElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLModElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLModElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLModElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLModElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLModElement, event: Event) => any) | null;
    onwheel: ((this: HTMLModElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDetailsElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDetailsElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDetailsElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDetailsElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onblur: ((this: HTMLDetailsElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onclick: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDetailsElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oncut: ((this: HTMLDetailsElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDetailsElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onended: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onerror: ((this: HTMLDetailsElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDetailsElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDetailsElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDetailsElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDetailsElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDetailsElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDetailsElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDetailsElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDetailsElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onplay: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDetailsElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDetailsElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onreset: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onresize: ((this: HTMLDetailsElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDetailsElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onselect: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDetailsElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDetailsElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDetailsElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDetailsElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDetailsElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDetailsElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDialogElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDialogElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDialogElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDialogElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDialogElement, event: Event) => any) | null;
    onblur: ((this: HTMLDialogElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDialogElement, event: Event) => any) | null;
    onchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onclick: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDialogElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDialogElement, event: Event) => any) | null;
    oncut: ((this: HTMLDialogElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDialogElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDialogElement, event: Event) => any) | null;
    onended: ((this: HTMLDialogElement, event: Event) => any) | null;
    onerror: ((this: HTMLDialogElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDialogElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDialogElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDialogElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDialogElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDialogElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDialogElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDialogElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDialogElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDialogElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDialogElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDialogElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDialogElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDialogElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDialogElement, event: Event) => any) | null;
    onplay: ((this: HTMLDialogElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDialogElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDialogElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDialogElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onreset: ((this: HTMLDialogElement, event: Event) => any) | null;
    onresize: ((this: HTMLDialogElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDialogElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDialogElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDialogElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDialogElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDialogElement, event: Event) => any) | null;
    onselect: ((this: HTMLDialogElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDialogElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDialogElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDialogElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDialogElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDialogElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDialogElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDialogElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDialogElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDialogElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDivElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDivElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDivElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDivElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDivElement, event: Event) => any) | null;
    onblur: ((this: HTMLDivElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDivElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDivElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDivElement, event: Event) => any) | null;
    onchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onclick: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDivElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDivElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDivElement, event: Event) => any) | null;
    oncut: ((this: HTMLDivElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDivElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDivElement, event: Event) => any) | null;
    onended: ((this: HTMLDivElement, event: Event) => any) | null;
    onerror: ((this: HTMLDivElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDivElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDivElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDivElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDivElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDivElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDivElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDivElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDivElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDivElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDivElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDivElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDivElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDivElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDivElement, event: Event) => any) | null;
    onplay: ((this: HTMLDivElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDivElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDivElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDivElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDivElement, event: Event) => any) | null;
    onreset: ((this: HTMLDivElement, event: Event) => any) | null;
    onresize: ((this: HTMLDivElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDivElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDivElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDivElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDivElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDivElement, event: Event) => any) | null;
    onselect: ((this: HTMLDivElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDivElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDivElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDivElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDivElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDivElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDivElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDivElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDivElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDivElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDivElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDivElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDivElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLDListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLDListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLDListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLDListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLDListElement, event: Event) => any) | null;
    onblur: ((this: HTMLDListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLDListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLDListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLDListElement, event: Event) => any) | null;
    onchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onclick: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLDListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLDListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLDListElement, event: Event) => any) | null;
    oncut: ((this: HTMLDListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLDListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLDListElement, event: Event) => any) | null;
    onended: ((this: HTMLDListElement, event: Event) => any) | null;
    onerror: ((this: HTMLDListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLDListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLDListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLDListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLDListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLDListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLDListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLDListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLDListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLDListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLDListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLDListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLDListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLDListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLDListElement, event: Event) => any) | null;
    onplay: ((this: HTMLDListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLDListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLDListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLDListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLDListElement, event: Event) => any) | null;
    onreset: ((this: HTMLDListElement, event: Event) => any) | null;
    onresize: ((this: HTMLDListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLDListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLDListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLDListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLDListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLDListElement, event: Event) => any) | null;
    onselect: ((this: HTMLDListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLDListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLDListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLDListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLDListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLDListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLDListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLDListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLDListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLDListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLDListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLDListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLDListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLEmbedElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLEmbedElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLEmbedElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLEmbedElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onblur: ((this: HTMLEmbedElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onclick: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLEmbedElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oncut: ((this: HTMLEmbedElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLEmbedElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onemptied: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onended: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onerror: ((this: HTMLEmbedElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLEmbedElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLEmbedElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLEmbedElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLEmbedElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLEmbedElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLEmbedElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLEmbedElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLEmbedElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onplay: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onplaying: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLEmbedElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLEmbedElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onreset: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onresize: ((this: HTMLEmbedElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLEmbedElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onseeking: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onselect: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onstalled: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLEmbedElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLEmbedElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLEmbedElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLEmbedElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLEmbedElement, event: Event) => any) | null;
    onwheel: ((this: HTMLEmbedElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLFieldSetElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLFieldSetElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLFieldSetElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLFieldSetElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onblur: ((this: HTMLFieldSetElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onclick: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLFieldSetElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oncut: ((this: HTMLFieldSetElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLFieldSetElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onemptied: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onended: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onerror: ((this: HTMLFieldSetElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLFieldSetElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLFieldSetElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLFieldSetElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLFieldSetElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLFieldSetElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLFieldSetElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLFieldSetElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onplay: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onplaying: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLFieldSetElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLFieldSetElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onreset: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onresize: ((this: HTMLFieldSetElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLFieldSetElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onseeking: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onselect: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onstalled: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLFieldSetElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLFieldSetElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLFieldSetElement, event: Event) => any) | null;
    onwheel: ((this: HTMLFieldSetElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLFormElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLFormElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLFormElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLFormElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLFormElement, event: Event) => any) | null;
    onblur: ((this: HTMLFormElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLFormElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLFormElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLFormElement, event: Event) => any) | null;
    onchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onclick: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLFormElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLFormElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLFormElement, event: Event) => any) | null;
    oncut: ((this: HTMLFormElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLFormElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onemptied: ((this: HTMLFormElement, event: Event) => any) | null;
    onended: ((this: HTMLFormElement, event: Event) => any) | null;
    onerror: ((this: HTMLFormElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLFormElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLFormElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLFormElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLFormElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLFormElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLFormElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLFormElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLFormElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLFormElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLFormElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLFormElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLFormElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLFormElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLFormElement, event: Event) => any) | null;
    onplay: ((this: HTMLFormElement, event: Event) => any) | null;
    onplaying: ((this: HTMLFormElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLFormElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLFormElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLFormElement, event: Event) => any) | null;
    onreset: ((this: HTMLFormElement, event: Event) => any) | null;
    onresize: ((this: HTMLFormElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLFormElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLFormElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLFormElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLFormElement, event: Event) => any) | null;
    onseeking: ((this: HTMLFormElement, event: Event) => any) | null;
    onselect: ((this: HTMLFormElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLFormElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLFormElement, event: Event) => any) | null;
    onstalled: ((this: HTMLFormElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLFormElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLFormElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLFormElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLFormElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLFormElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLFormElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLFormElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLFormElement, event: Event) => any) | null;
    onwheel: ((this: HTMLFormElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHeadingElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHeadingElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHeadingElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHeadingElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onblur: ((this: HTMLHeadingElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onclick: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHeadingElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oncut: ((this: HTMLHeadingElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHeadingElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onended: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onerror: ((this: HTMLHeadingElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHeadingElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHeadingElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHeadingElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHeadingElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHeadingElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHeadingElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHeadingElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHeadingElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onplay: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHeadingElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHeadingElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onreset: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onresize: ((this: HTMLHeadingElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHeadingElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onselect: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHeadingElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHeadingElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHeadingElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHeadingElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHeadingElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHeadingElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHeadElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHeadElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHeadElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHeadElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHeadElement, event: Event) => any) | null;
    onblur: ((this: HTMLHeadElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHeadElement, event: Event) => any) | null;
    onchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onclick: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHeadElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHeadElement, event: Event) => any) | null;
    oncut: ((this: HTMLHeadElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHeadElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHeadElement, event: Event) => any) | null;
    onended: ((this: HTMLHeadElement, event: Event) => any) | null;
    onerror: ((this: HTMLHeadElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHeadElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHeadElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHeadElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHeadElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHeadElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHeadElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHeadElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHeadElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHeadElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHeadElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHeadElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHeadElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHeadElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHeadElement, event: Event) => any) | null;
    onplay: ((this: HTMLHeadElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHeadElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHeadElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHeadElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onreset: ((this: HTMLHeadElement, event: Event) => any) | null;
    onresize: ((this: HTMLHeadElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHeadElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHeadElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHeadElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHeadElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHeadElement, event: Event) => any) | null;
    onselect: ((this: HTMLHeadElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHeadElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHeadElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHeadElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHeadElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHeadElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHeadElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHeadElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHeadElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHeadElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHRElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHRElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHRElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHRElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHRElement, event: Event) => any) | null;
    onblur: ((this: HTMLHRElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHRElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHRElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHRElement, event: Event) => any) | null;
    onchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onclick: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHRElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHRElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHRElement, event: Event) => any) | null;
    oncut: ((this: HTMLHRElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHRElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHRElement, event: Event) => any) | null;
    onended: ((this: HTMLHRElement, event: Event) => any) | null;
    onerror: ((this: HTMLHRElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHRElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHRElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHRElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHRElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHRElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHRElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHRElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHRElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHRElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHRElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHRElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHRElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHRElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHRElement, event: Event) => any) | null;
    onplay: ((this: HTMLHRElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHRElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHRElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHRElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHRElement, event: Event) => any) | null;
    onreset: ((this: HTMLHRElement, event: Event) => any) | null;
    onresize: ((this: HTMLHRElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHRElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHRElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHRElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHRElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHRElement, event: Event) => any) | null;
    onselect: ((this: HTMLHRElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHRElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHRElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHRElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHRElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHRElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHRElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHRElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHRElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHRElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHRElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHRElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHRElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLHtmlElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLHtmlElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLHtmlElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLHtmlElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onblur: ((this: HTMLHtmlElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onclick: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLHtmlElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oncut: ((this: HTMLHtmlElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLHtmlElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onemptied: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onended: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onerror: ((this: HTMLHtmlElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLHtmlElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLHtmlElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLHtmlElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLHtmlElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLHtmlElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLHtmlElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLHtmlElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLHtmlElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onplay: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onplaying: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLHtmlElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLHtmlElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onreset: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onresize: ((this: HTMLHtmlElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLHtmlElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onseeking: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onselect: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onstalled: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLHtmlElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLHtmlElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLHtmlElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLHtmlElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLHtmlElement, event: Event) => any) | null;
    onwheel: ((this: HTMLHtmlElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLIFrameElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLIFrameElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLIFrameElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLIFrameElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onblur: ((this: HTMLIFrameElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onclick: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLIFrameElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oncut: ((this: HTMLIFrameElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLIFrameElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onemptied: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onended: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onerror: ((this: HTMLIFrameElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLIFrameElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLIFrameElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLIFrameElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLIFrameElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLIFrameElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLIFrameElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLIFrameElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLIFrameElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onplay: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onplaying: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLIFrameElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLIFrameElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onreset: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onresize: ((this: HTMLIFrameElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLIFrameElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onseeking: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onselect: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onstalled: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLIFrameElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLIFrameElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLIFrameElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLIFrameElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLIFrameElement, event: Event) => any) | null;
    onwheel: ((this: HTMLIFrameElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLImageElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLImageElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLImageElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLImageElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLImageElement, event: Event) => any) | null;
    onblur: ((this: HTMLImageElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLImageElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLImageElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLImageElement, event: Event) => any) | null;
    onchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onclick: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLImageElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLImageElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLImageElement, event: Event) => any) | null;
    oncut: ((this: HTMLImageElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLImageElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onemptied: ((this: HTMLImageElement, event: Event) => any) | null;
    onended: ((this: HTMLImageElement, event: Event) => any) | null;
    onerror: ((this: HTMLImageElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLImageElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLImageElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLImageElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLImageElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLImageElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLImageElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLImageElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLImageElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLImageElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLImageElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLImageElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLImageElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLImageElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLImageElement, event: Event) => any) | null;
    onplay: ((this: HTMLImageElement, event: Event) => any) | null;
    onplaying: ((this: HTMLImageElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLImageElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLImageElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLImageElement, event: Event) => any) | null;
    onreset: ((this: HTMLImageElement, event: Event) => any) | null;
    onresize: ((this: HTMLImageElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLImageElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLImageElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLImageElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLImageElement, event: Event) => any) | null;
    onseeking: ((this: HTMLImageElement, event: Event) => any) | null;
    onselect: ((this: HTMLImageElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLImageElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLImageElement, event: Event) => any) | null;
    onstalled: ((this: HTMLImageElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLImageElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLImageElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLImageElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLImageElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLImageElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLImageElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLImageElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLImageElement, event: Event) => any) | null;
    onwheel: ((this: HTMLImageElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLabelElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLabelElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLabelElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLabelElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLabelElement, event: Event) => any) | null;
    onblur: ((this: HTMLLabelElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLabelElement, event: Event) => any) | null;
    onchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onclick: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLabelElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLabelElement, event: Event) => any) | null;
    oncut: ((this: HTMLLabelElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLabelElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLabelElement, event: Event) => any) | null;
    onended: ((this: HTMLLabelElement, event: Event) => any) | null;
    onerror: ((this: HTMLLabelElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLabelElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLabelElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLabelElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLabelElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLabelElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLabelElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLabelElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLabelElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLabelElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLabelElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLabelElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLabelElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLabelElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLabelElement, event: Event) => any) | null;
    onplay: ((this: HTMLLabelElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLabelElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLabelElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLabelElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onreset: ((this: HTMLLabelElement, event: Event) => any) | null;
    onresize: ((this: HTMLLabelElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLabelElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLabelElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLabelElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLabelElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLabelElement, event: Event) => any) | null;
    onselect: ((this: HTMLLabelElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLabelElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLabelElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLabelElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLabelElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLabelElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLabelElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLabelElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLabelElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLabelElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLegendElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLegendElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLegendElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLegendElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLegendElement, event: Event) => any) | null;
    onblur: ((this: HTMLLegendElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLegendElement, event: Event) => any) | null;
    onchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onclick: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLegendElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLegendElement, event: Event) => any) | null;
    oncut: ((this: HTMLLegendElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLegendElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLegendElement, event: Event) => any) | null;
    onended: ((this: HTMLLegendElement, event: Event) => any) | null;
    onerror: ((this: HTMLLegendElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLegendElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLegendElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLegendElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLegendElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLegendElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLegendElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLegendElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLegendElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLegendElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLegendElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLegendElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLegendElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLegendElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLegendElement, event: Event) => any) | null;
    onplay: ((this: HTMLLegendElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLegendElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLegendElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLegendElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onreset: ((this: HTMLLegendElement, event: Event) => any) | null;
    onresize: ((this: HTMLLegendElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLegendElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLegendElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLegendElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLegendElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLegendElement, event: Event) => any) | null;
    onselect: ((this: HTMLLegendElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLegendElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLegendElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLegendElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLegendElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLegendElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLegendElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLegendElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLegendElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLegendElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLIElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLIElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLIElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLIElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLIElement, event: Event) => any) | null;
    onblur: ((this: HTMLLIElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLIElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLIElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLIElement, event: Event) => any) | null;
    onchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onclick: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLIElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLIElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLIElement, event: Event) => any) | null;
    oncut: ((this: HTMLLIElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLIElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLIElement, event: Event) => any) | null;
    onended: ((this: HTMLLIElement, event: Event) => any) | null;
    onerror: ((this: HTMLLIElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLIElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLIElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLIElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLIElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLIElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLIElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLIElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLIElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLIElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLIElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLIElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLIElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLIElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLIElement, event: Event) => any) | null;
    onplay: ((this: HTMLLIElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLIElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLIElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLIElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLIElement, event: Event) => any) | null;
    onreset: ((this: HTMLLIElement, event: Event) => any) | null;
    onresize: ((this: HTMLLIElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLIElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLIElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLIElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLIElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLIElement, event: Event) => any) | null;
    onselect: ((this: HTMLLIElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLIElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLIElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLIElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLIElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLIElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLIElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLIElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLIElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLIElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLIElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLIElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLIElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLLinkElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLLinkElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLLinkElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLLinkElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLLinkElement, event: Event) => any) | null;
    onblur: ((this: HTMLLinkElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLLinkElement, event: Event) => any) | null;
    onchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onclick: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLLinkElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLLinkElement, event: Event) => any) | null;
    oncut: ((this: HTMLLinkElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLLinkElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onemptied: ((this: HTMLLinkElement, event: Event) => any) | null;
    onended: ((this: HTMLLinkElement, event: Event) => any) | null;
    onerror: ((this: HTMLLinkElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLLinkElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLLinkElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLLinkElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLLinkElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLLinkElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLLinkElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLLinkElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLLinkElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLLinkElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLLinkElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLLinkElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLLinkElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLLinkElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLLinkElement, event: Event) => any) | null;
    onplay: ((this: HTMLLinkElement, event: Event) => any) | null;
    onplaying: ((this: HTMLLinkElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLLinkElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLLinkElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onreset: ((this: HTMLLinkElement, event: Event) => any) | null;
    onresize: ((this: HTMLLinkElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLLinkElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLLinkElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLLinkElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLLinkElement, event: Event) => any) | null;
    onseeking: ((this: HTMLLinkElement, event: Event) => any) | null;
    onselect: ((this: HTMLLinkElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLLinkElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onstalled: ((this: HTMLLinkElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLLinkElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLLinkElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLLinkElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLLinkElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLLinkElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLLinkElement, event: Event) => any) | null;
    onwheel: ((this: HTMLLinkElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMenuElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMenuElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMenuElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMenuElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMenuElement, event: Event) => any) | null;
    onblur: ((this: HTMLMenuElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMenuElement, event: Event) => any) | null;
    onchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onclick: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMenuElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMenuElement, event: Event) => any) | null;
    oncut: ((this: HTMLMenuElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMenuElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMenuElement, event: Event) => any) | null;
    onended: ((this: HTMLMenuElement, event: Event) => any) | null;
    onerror: ((this: HTMLMenuElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMenuElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMenuElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMenuElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMenuElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMenuElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMenuElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMenuElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMenuElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMenuElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMenuElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMenuElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMenuElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMenuElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMenuElement, event: Event) => any) | null;
    onplay: ((this: HTMLMenuElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMenuElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMenuElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMenuElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onreset: ((this: HTMLMenuElement, event: Event) => any) | null;
    onresize: ((this: HTMLMenuElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMenuElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMenuElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMenuElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMenuElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMenuElement, event: Event) => any) | null;
    onselect: ((this: HTMLMenuElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMenuElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMenuElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMenuElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMenuElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMenuElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMenuElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMenuElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMenuElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMenuElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMetaElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMetaElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMetaElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMetaElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMetaElement, event: Event) => any) | null;
    onblur: ((this: HTMLMetaElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMetaElement, event: Event) => any) | null;
    onchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onclick: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMetaElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMetaElement, event: Event) => any) | null;
    oncut: ((this: HTMLMetaElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMetaElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMetaElement, event: Event) => any) | null;
    onended: ((this: HTMLMetaElement, event: Event) => any) | null;
    onerror: ((this: HTMLMetaElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMetaElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMetaElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMetaElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMetaElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMetaElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMetaElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMetaElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMetaElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMetaElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMetaElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMetaElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMetaElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMetaElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMetaElement, event: Event) => any) | null;
    onplay: ((this: HTMLMetaElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMetaElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMetaElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMetaElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onreset: ((this: HTMLMetaElement, event: Event) => any) | null;
    onresize: ((this: HTMLMetaElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMetaElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMetaElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMetaElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMetaElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMetaElement, event: Event) => any) | null;
    onselect: ((this: HTMLMetaElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMetaElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMetaElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMetaElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMetaElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMetaElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMetaElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMetaElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMetaElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMetaElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLMeterElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLMeterElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLMeterElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLMeterElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLMeterElement, event: Event) => any) | null;
    onblur: ((this: HTMLMeterElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLMeterElement, event: Event) => any) | null;
    onchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onclick: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLMeterElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLMeterElement, event: Event) => any) | null;
    oncut: ((this: HTMLMeterElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLMeterElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onemptied: ((this: HTMLMeterElement, event: Event) => any) | null;
    onended: ((this: HTMLMeterElement, event: Event) => any) | null;
    onerror: ((this: HTMLMeterElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLMeterElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLMeterElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLMeterElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLMeterElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLMeterElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLMeterElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLMeterElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLMeterElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLMeterElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLMeterElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLMeterElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLMeterElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLMeterElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLMeterElement, event: Event) => any) | null;
    onplay: ((this: HTMLMeterElement, event: Event) => any) | null;
    onplaying: ((this: HTMLMeterElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLMeterElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLMeterElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onreset: ((this: HTMLMeterElement, event: Event) => any) | null;
    onresize: ((this: HTMLMeterElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLMeterElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLMeterElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLMeterElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLMeterElement, event: Event) => any) | null;
    onseeking: ((this: HTMLMeterElement, event: Event) => any) | null;
    onselect: ((this: HTMLMeterElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLMeterElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onstalled: ((this: HTMLMeterElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLMeterElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLMeterElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLMeterElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLMeterElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLMeterElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLMeterElement, event: Event) => any) | null;
    onwheel: ((this: HTMLMeterElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOListElement, event: Event) => any) | null;
    onblur: ((this: HTMLOListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOListElement, event: Event) => any) | null;
    onchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onclick: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOListElement, event: Event) => any) | null;
    oncut: ((this: HTMLOListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOListElement, event: Event) => any) | null;
    onended: ((this: HTMLOListElement, event: Event) => any) | null;
    onerror: ((this: HTMLOListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOListElement, event: Event) => any) | null;
    onplay: ((this: HTMLOListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOListElement, event: Event) => any) | null;
    onreset: ((this: HTMLOListElement, event: Event) => any) | null;
    onresize: ((this: HTMLOListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOListElement, event: Event) => any) | null;
    onselect: ((this: HTMLOListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOptGroupElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOptGroupElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOptGroupElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOptGroupElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onblur: ((this: HTMLOptGroupElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onclick: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOptGroupElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oncut: ((this: HTMLOptGroupElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOptGroupElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onended: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onerror: ((this: HTMLOptGroupElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOptGroupElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOptGroupElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOptGroupElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOptGroupElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOptGroupElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOptGroupElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOptGroupElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onplay: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOptGroupElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOptGroupElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onreset: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onresize: ((this: HTMLOptGroupElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOptGroupElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onselect: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOptGroupElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOptGroupElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOptGroupElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOptGroupElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOptionElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOptionElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOptionElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOptionElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOptionElement, event: Event) => any) | null;
    onblur: ((this: HTMLOptionElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOptionElement, event: Event) => any) | null;
    onchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onclick: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOptionElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOptionElement, event: Event) => any) | null;
    oncut: ((this: HTMLOptionElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOptionElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOptionElement, event: Event) => any) | null;
    onended: ((this: HTMLOptionElement, event: Event) => any) | null;
    onerror: ((this: HTMLOptionElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOptionElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOptionElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOptionElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOptionElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOptionElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOptionElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOptionElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOptionElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOptionElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOptionElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOptionElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOptionElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOptionElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOptionElement, event: Event) => any) | null;
    onplay: ((this: HTMLOptionElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOptionElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOptionElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOptionElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onreset: ((this: HTMLOptionElement, event: Event) => any) | null;
    onresize: ((this: HTMLOptionElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOptionElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOptionElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOptionElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOptionElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOptionElement, event: Event) => any) | null;
    onselect: ((this: HTMLOptionElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOptionElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOptionElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOptionElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOptionElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOptionElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOptionElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOptionElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOptionElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOptionElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLOutputElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLOutputElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLOutputElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLOutputElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLOutputElement, event: Event) => any) | null;
    onblur: ((this: HTMLOutputElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLOutputElement, event: Event) => any) | null;
    onchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onclick: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLOutputElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLOutputElement, event: Event) => any) | null;
    oncut: ((this: HTMLOutputElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLOutputElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onemptied: ((this: HTMLOutputElement, event: Event) => any) | null;
    onended: ((this: HTMLOutputElement, event: Event) => any) | null;
    onerror: ((this: HTMLOutputElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLOutputElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLOutputElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLOutputElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLOutputElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLOutputElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLOutputElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLOutputElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLOutputElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLOutputElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLOutputElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLOutputElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLOutputElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLOutputElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLOutputElement, event: Event) => any) | null;
    onplay: ((this: HTMLOutputElement, event: Event) => any) | null;
    onplaying: ((this: HTMLOutputElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLOutputElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLOutputElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onreset: ((this: HTMLOutputElement, event: Event) => any) | null;
    onresize: ((this: HTMLOutputElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLOutputElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLOutputElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLOutputElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLOutputElement, event: Event) => any) | null;
    onseeking: ((this: HTMLOutputElement, event: Event) => any) | null;
    onselect: ((this: HTMLOutputElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLOutputElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onstalled: ((this: HTMLOutputElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLOutputElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLOutputElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLOutputElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLOutputElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLOutputElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLOutputElement, event: Event) => any) | null;
    onwheel: ((this: HTMLOutputElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLParagraphElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLParagraphElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLParagraphElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLParagraphElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onblur: ((this: HTMLParagraphElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onclick: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLParagraphElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oncut: ((this: HTMLParagraphElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLParagraphElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onemptied: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onended: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onerror: ((this: HTMLParagraphElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLParagraphElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLParagraphElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLParagraphElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLParagraphElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLParagraphElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLParagraphElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLParagraphElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLParagraphElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onplay: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onplaying: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLParagraphElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLParagraphElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onreset: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onresize: ((this: HTMLParagraphElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLParagraphElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onseeking: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onselect: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onstalled: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLParagraphElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLParagraphElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLParagraphElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLParagraphElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLParagraphElement, event: Event) => any) | null;
    onwheel: ((this: HTMLParagraphElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLPictureElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLPictureElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLPictureElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLPictureElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLPictureElement, event: Event) => any) | null;
    onblur: ((this: HTMLPictureElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLPictureElement, event: Event) => any) | null;
    onchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onclick: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLPictureElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLPictureElement, event: Event) => any) | null;
    oncut: ((this: HTMLPictureElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLPictureElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onemptied: ((this: HTMLPictureElement, event: Event) => any) | null;
    onended: ((this: HTMLPictureElement, event: Event) => any) | null;
    onerror: ((this: HTMLPictureElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLPictureElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLPictureElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLPictureElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLPictureElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLPictureElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLPictureElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLPictureElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLPictureElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLPictureElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLPictureElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLPictureElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLPictureElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLPictureElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLPictureElement, event: Event) => any) | null;
    onplay: ((this: HTMLPictureElement, event: Event) => any) | null;
    onplaying: ((this: HTMLPictureElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLPictureElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLPictureElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onreset: ((this: HTMLPictureElement, event: Event) => any) | null;
    onresize: ((this: HTMLPictureElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLPictureElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLPictureElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLPictureElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLPictureElement, event: Event) => any) | null;
    onseeking: ((this: HTMLPictureElement, event: Event) => any) | null;
    onselect: ((this: HTMLPictureElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLPictureElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onstalled: ((this: HTMLPictureElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLPictureElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLPictureElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLPictureElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLPictureElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLPictureElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLPictureElement, event: Event) => any) | null;
    onwheel: ((this: HTMLPictureElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLPreElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLPreElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLPreElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLPreElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLPreElement, event: Event) => any) | null;
    onblur: ((this: HTMLPreElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLPreElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLPreElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLPreElement, event: Event) => any) | null;
    onchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onclick: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLPreElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLPreElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLPreElement, event: Event) => any) | null;
    oncut: ((this: HTMLPreElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLPreElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onemptied: ((this: HTMLPreElement, event: Event) => any) | null;
    onended: ((this: HTMLPreElement, event: Event) => any) | null;
    onerror: ((this: HTMLPreElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLPreElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLPreElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLPreElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLPreElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLPreElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLPreElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLPreElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLPreElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLPreElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLPreElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLPreElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLPreElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLPreElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLPreElement, event: Event) => any) | null;
    onplay: ((this: HTMLPreElement, event: Event) => any) | null;
    onplaying: ((this: HTMLPreElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLPreElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLPreElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLPreElement, event: Event) => any) | null;
    onreset: ((this: HTMLPreElement, event: Event) => any) | null;
    onresize: ((this: HTMLPreElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLPreElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLPreElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLPreElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLPreElement, event: Event) => any) | null;
    onseeking: ((this: HTMLPreElement, event: Event) => any) | null;
    onselect: ((this: HTMLPreElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLPreElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLPreElement, event: Event) => any) | null;
    onstalled: ((this: HTMLPreElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLPreElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLPreElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLPreElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLPreElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLPreElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLPreElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLPreElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLPreElement, event: Event) => any) | null;
    onwheel: ((this: HTMLPreElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLScriptElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLScriptElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLScriptElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLScriptElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLScriptElement, event: Event) => any) | null;
    onblur: ((this: HTMLScriptElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLScriptElement, event: Event) => any) | null;
    onchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onclick: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLScriptElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLScriptElement, event: Event) => any) | null;
    oncut: ((this: HTMLScriptElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLScriptElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onemptied: ((this: HTMLScriptElement, event: Event) => any) | null;
    onended: ((this: HTMLScriptElement, event: Event) => any) | null;
    onerror: ((this: HTMLScriptElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLScriptElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLScriptElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLScriptElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLScriptElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLScriptElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLScriptElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLScriptElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLScriptElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLScriptElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLScriptElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLScriptElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLScriptElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLScriptElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLScriptElement, event: Event) => any) | null;
    onplay: ((this: HTMLScriptElement, event: Event) => any) | null;
    onplaying: ((this: HTMLScriptElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLScriptElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLScriptElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onreset: ((this: HTMLScriptElement, event: Event) => any) | null;
    onresize: ((this: HTMLScriptElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLScriptElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLScriptElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLScriptElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLScriptElement, event: Event) => any) | null;
    onseeking: ((this: HTMLScriptElement, event: Event) => any) | null;
    onselect: ((this: HTMLScriptElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLScriptElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onstalled: ((this: HTMLScriptElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLScriptElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLScriptElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLScriptElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLScriptElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLScriptElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLScriptElement, event: Event) => any) | null;
    onwheel: ((this: HTMLScriptElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSourceElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSourceElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSourceElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSourceElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSourceElement, event: Event) => any) | null;
    onblur: ((this: HTMLSourceElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSourceElement, event: Event) => any) | null;
    onchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onclick: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSourceElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSourceElement, event: Event) => any) | null;
    oncut: ((this: HTMLSourceElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSourceElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSourceElement, event: Event) => any) | null;
    onended: ((this: HTMLSourceElement, event: Event) => any) | null;
    onerror: ((this: HTMLSourceElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSourceElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSourceElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSourceElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSourceElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSourceElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSourceElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSourceElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSourceElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSourceElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSourceElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSourceElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSourceElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSourceElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSourceElement, event: Event) => any) | null;
    onplay: ((this: HTMLSourceElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSourceElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSourceElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSourceElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onreset: ((this: HTMLSourceElement, event: Event) => any) | null;
    onresize: ((this: HTMLSourceElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSourceElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSourceElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSourceElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSourceElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSourceElement, event: Event) => any) | null;
    onselect: ((this: HTMLSourceElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSourceElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSourceElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSourceElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSourceElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSourceElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSourceElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSourceElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSourceElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSourceElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLSpanElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLSpanElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLSpanElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLSpanElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLSpanElement, event: Event) => any) | null;
    onblur: ((this: HTMLSpanElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLSpanElement, event: Event) => any) | null;
    onchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onclick: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLSpanElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLSpanElement, event: Event) => any) | null;
    oncut: ((this: HTMLSpanElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLSpanElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onemptied: ((this: HTMLSpanElement, event: Event) => any) | null;
    onended: ((this: HTMLSpanElement, event: Event) => any) | null;
    onerror: ((this: HTMLSpanElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLSpanElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLSpanElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLSpanElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLSpanElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLSpanElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLSpanElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLSpanElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLSpanElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLSpanElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLSpanElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLSpanElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLSpanElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLSpanElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLSpanElement, event: Event) => any) | null;
    onplay: ((this: HTMLSpanElement, event: Event) => any) | null;
    onplaying: ((this: HTMLSpanElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLSpanElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLSpanElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onreset: ((this: HTMLSpanElement, event: Event) => any) | null;
    onresize: ((this: HTMLSpanElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLSpanElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLSpanElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLSpanElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLSpanElement, event: Event) => any) | null;
    onseeking: ((this: HTMLSpanElement, event: Event) => any) | null;
    onselect: ((this: HTMLSpanElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLSpanElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onstalled: ((this: HTMLSpanElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLSpanElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLSpanElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLSpanElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLSpanElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLSpanElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLSpanElement, event: Event) => any) | null;
    onwheel: ((this: HTMLSpanElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLStyleElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLStyleElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLStyleElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLStyleElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLStyleElement, event: Event) => any) | null;
    onblur: ((this: HTMLStyleElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLStyleElement, event: Event) => any) | null;
    onchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onclick: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLStyleElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLStyleElement, event: Event) => any) | null;
    oncut: ((this: HTMLStyleElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLStyleElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onemptied: ((this: HTMLStyleElement, event: Event) => any) | null;
    onended: ((this: HTMLStyleElement, event: Event) => any) | null;
    onerror: ((this: HTMLStyleElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLStyleElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLStyleElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLStyleElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLStyleElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLStyleElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLStyleElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLStyleElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLStyleElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLStyleElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLStyleElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLStyleElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLStyleElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLStyleElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLStyleElement, event: Event) => any) | null;
    onplay: ((this: HTMLStyleElement, event: Event) => any) | null;
    onplaying: ((this: HTMLStyleElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLStyleElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLStyleElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onreset: ((this: HTMLStyleElement, event: Event) => any) | null;
    onresize: ((this: HTMLStyleElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLStyleElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLStyleElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLStyleElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLStyleElement, event: Event) => any) | null;
    onseeking: ((this: HTMLStyleElement, event: Event) => any) | null;
    onselect: ((this: HTMLStyleElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLStyleElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onstalled: ((this: HTMLStyleElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLStyleElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLStyleElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLStyleElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLStyleElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLStyleElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLStyleElement, event: Event) => any) | null;
    onwheel: ((this: HTMLStyleElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableElement, event: Event) => any) | null;
    onended: ((this: HTMLTableElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableSectionElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableSectionElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableSectionElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableSectionElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableSectionElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableSectionElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableSectionElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableSectionElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onended: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableSectionElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableSectionElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableSectionElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableSectionElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableSectionElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableSectionElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableSectionElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableSectionElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableSectionElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableSectionElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableSectionElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableSectionElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableSectionElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableSectionElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableSectionElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableSectionElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableCellElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableCellElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableCellElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableCellElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableCellElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableCellElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableCellElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableCellElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onended: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableCellElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableCellElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableCellElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableCellElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableCellElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableCellElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableCellElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableCellElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableCellElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableCellElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableCellElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableCellElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableCellElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableCellElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableCellElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableCellElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableCellElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableCellElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableCellElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTemplateElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTemplateElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTemplateElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTemplateElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onblur: ((this: HTMLTemplateElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onclick: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTemplateElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oncut: ((this: HTMLTemplateElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTemplateElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onended: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onerror: ((this: HTMLTemplateElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTemplateElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTemplateElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTemplateElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTemplateElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTemplateElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTemplateElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTemplateElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTemplateElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onplay: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTemplateElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTemplateElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onreset: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onresize: ((this: HTMLTemplateElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTemplateElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onselect: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTemplateElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTemplateElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTemplateElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTemplateElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTemplateElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTemplateElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTextAreaElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTextAreaElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTextAreaElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTextAreaElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onblur: ((this: HTMLTextAreaElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onclick: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTextAreaElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oncut: ((this: HTMLTextAreaElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTextAreaElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onended: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onerror: ((this: HTMLTextAreaElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTextAreaElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTextAreaElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTextAreaElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTextAreaElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTextAreaElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTextAreaElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTextAreaElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onplay: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTextAreaElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTextAreaElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onreset: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onresize: ((this: HTMLTextAreaElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTextAreaElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onselect: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTextAreaElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTextAreaElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTextAreaElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTextAreaElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTimeElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTimeElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTimeElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTimeElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTimeElement, event: Event) => any) | null;
    onblur: ((this: HTMLTimeElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTimeElement, event: Event) => any) | null;
    onchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onclick: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTimeElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTimeElement, event: Event) => any) | null;
    oncut: ((this: HTMLTimeElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTimeElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTimeElement, event: Event) => any) | null;
    onended: ((this: HTMLTimeElement, event: Event) => any) | null;
    onerror: ((this: HTMLTimeElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTimeElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTimeElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTimeElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTimeElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTimeElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTimeElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTimeElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTimeElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTimeElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTimeElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTimeElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTimeElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTimeElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTimeElement, event: Event) => any) | null;
    onplay: ((this: HTMLTimeElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTimeElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTimeElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTimeElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onreset: ((this: HTMLTimeElement, event: Event) => any) | null;
    onresize: ((this: HTMLTimeElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTimeElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTimeElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTimeElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTimeElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTimeElement, event: Event) => any) | null;
    onselect: ((this: HTMLTimeElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTimeElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTimeElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTimeElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTimeElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTimeElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTimeElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTimeElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTimeElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTimeElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTitleElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTitleElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTitleElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTitleElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTitleElement, event: Event) => any) | null;
    onblur: ((this: HTMLTitleElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTitleElement, event: Event) => any) | null;
    onchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onclick: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTitleElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTitleElement, event: Event) => any) | null;
    oncut: ((this: HTMLTitleElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTitleElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTitleElement, event: Event) => any) | null;
    onended: ((this: HTMLTitleElement, event: Event) => any) | null;
    onerror: ((this: HTMLTitleElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTitleElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTitleElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTitleElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTitleElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTitleElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTitleElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTitleElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTitleElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTitleElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTitleElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTitleElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTitleElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTitleElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTitleElement, event: Event) => any) | null;
    onplay: ((this: HTMLTitleElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTitleElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTitleElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTitleElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onreset: ((this: HTMLTitleElement, event: Event) => any) | null;
    onresize: ((this: HTMLTitleElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTitleElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTitleElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTitleElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTitleElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTitleElement, event: Event) => any) | null;
    onselect: ((this: HTMLTitleElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTitleElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTitleElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTitleElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTitleElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTitleElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTitleElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTitleElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTitleElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTitleElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTableRowElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTableRowElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTableRowElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTableRowElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onblur: ((this: HTMLTableRowElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onclick: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTableRowElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oncut: ((this: HTMLTableRowElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTableRowElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onended: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onerror: ((this: HTMLTableRowElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTableRowElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTableRowElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTableRowElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTableRowElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTableRowElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTableRowElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTableRowElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTableRowElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onplay: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTableRowElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTableRowElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onreset: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onresize: ((this: HTMLTableRowElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTableRowElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onselect: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTableRowElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTableRowElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTableRowElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTableRowElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTableRowElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTableRowElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLTrackElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLTrackElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLTrackElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLTrackElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLTrackElement, event: Event) => any) | null;
    onblur: ((this: HTMLTrackElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLTrackElement, event: Event) => any) | null;
    onchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onclick: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLTrackElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLTrackElement, event: Event) => any) | null;
    oncut: ((this: HTMLTrackElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLTrackElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onemptied: ((this: HTMLTrackElement, event: Event) => any) | null;
    onended: ((this: HTMLTrackElement, event: Event) => any) | null;
    onerror: ((this: HTMLTrackElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLTrackElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLTrackElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLTrackElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLTrackElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLTrackElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLTrackElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLTrackElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLTrackElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLTrackElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLTrackElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLTrackElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLTrackElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLTrackElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLTrackElement, event: Event) => any) | null;
    onplay: ((this: HTMLTrackElement, event: Event) => any) | null;
    onplaying: ((this: HTMLTrackElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLTrackElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLTrackElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onreset: ((this: HTMLTrackElement, event: Event) => any) | null;
    onresize: ((this: HTMLTrackElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLTrackElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLTrackElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLTrackElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLTrackElement, event: Event) => any) | null;
    onseeking: ((this: HTMLTrackElement, event: Event) => any) | null;
    onselect: ((this: HTMLTrackElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLTrackElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onstalled: ((this: HTMLTrackElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLTrackElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLTrackElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLTrackElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLTrackElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLTrackElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLTrackElement, event: Event) => any) | null;
    onwheel: ((this: HTMLTrackElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLUListElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLUListElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLUListElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLUListElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLUListElement, event: Event) => any) | null;
    onblur: ((this: HTMLUListElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLUListElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLUListElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLUListElement, event: Event) => any) | null;
    onchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onclick: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLUListElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLUListElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLUListElement, event: Event) => any) | null;
    oncut: ((this: HTMLUListElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLUListElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onemptied: ((this: HTMLUListElement, event: Event) => any) | null;
    onended: ((this: HTMLUListElement, event: Event) => any) | null;
    onerror: ((this: HTMLUListElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLUListElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLUListElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLUListElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLUListElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLUListElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLUListElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLUListElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLUListElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLUListElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLUListElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLUListElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLUListElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLUListElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLUListElement, event: Event) => any) | null;
    onplay: ((this: HTMLUListElement, event: Event) => any) | null;
    onplaying: ((this: HTMLUListElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLUListElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLUListElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLUListElement, event: Event) => any) | null;
    onreset: ((this: HTMLUListElement, event: Event) => any) | null;
    onresize: ((this: HTMLUListElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLUListElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLUListElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLUListElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLUListElement, event: Event) => any) | null;
    onseeking: ((this: HTMLUListElement, event: Event) => any) | null;
    onselect: ((this: HTMLUListElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLUListElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLUListElement, event: Event) => any) | null;
    onstalled: ((this: HTMLUListElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLUListElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLUListElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLUListElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLUListElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLUListElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLUListElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLUListElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLUListElement, event: Event) => any) | null;
    onwheel: ((this: HTMLUListElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | (Omit<HTMLVideoElement, keyof GlobalEventHandlers> & {
    onabort: ((this: HTMLVideoElement, event: UIEvent) => any) | null;
    onanimationcancel: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onanimationend: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onanimationiteration: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onanimationstart: ((this: HTMLVideoElement, event: AnimationEvent) => any) | null;
    onauxclick: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onbeforeinput: ((this: HTMLVideoElement, event: InputEvent) => any) | null;
    onbeforetoggle: ((this: HTMLVideoElement, event: Event) => any) | null;
    onblur: ((this: HTMLVideoElement, event: FocusEvent) => any) | null;
    oncancel: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncanplay: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncanplaythrough: ((this: HTMLVideoElement, event: Event) => any) | null;
    onchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onclick: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onclose: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncontextmenu: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    oncopy: ((this: HTMLVideoElement, event: ClipboardEvent) => any) | null;
    oncuechange: ((this: HTMLVideoElement, event: Event) => any) | null;
    oncut: ((this: HTMLVideoElement, event: ClipboardEvent) => any) | null;
    ondblclick: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    ondrag: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragend: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragenter: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragleave: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragover: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondragstart: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondrop: ((this: HTMLVideoElement, event: DragEvent) => any) | null;
    ondurationchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onemptied: ((this: HTMLVideoElement, event: Event) => any) | null;
    onended: ((this: HTMLVideoElement, event: Event) => any) | null;
    onerror: ((this: HTMLVideoElement, event: string | Event) => any) | null;
    onfocus: ((this: HTMLVideoElement, event: FocusEvent) => any) | null;
    onformdata: ((this: HTMLVideoElement, event: FormDataEvent) => any) | null;
    ongotpointercapture: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    oninput: ((this: HTMLVideoElement, event: Event) => any) | null;
    oninvalid: ((this: HTMLVideoElement, event: Event) => any) | null;
    onkeydown: ((this: HTMLVideoElement, event: KeyboardEvent) => any) | null;
    onkeypress: ((this: HTMLVideoElement, event: KeyboardEvent) => any) | null;
    onkeyup: ((this: HTMLVideoElement, event: KeyboardEvent) => any) | null;
    onload: ((this: HTMLVideoElement, event: Event) => any) | null;
    onloadeddata: ((this: HTMLVideoElement, event: Event) => any) | null;
    onloadedmetadata: ((this: HTMLVideoElement, event: Event) => any) | null;
    onloadstart: ((this: HTMLVideoElement, event: Event) => any) | null;
    onlostpointercapture: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onmousedown: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseenter: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseleave: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmousemove: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseout: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseover: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onmouseup: ((this: HTMLVideoElement, event: MouseEvent) => any) | null;
    onpaste: ((this: HTMLVideoElement, event: ClipboardEvent) => any) | null;
    onpause: ((this: HTMLVideoElement, event: Event) => any) | null;
    onplay: ((this: HTMLVideoElement, event: Event) => any) | null;
    onplaying: ((this: HTMLVideoElement, event: Event) => any) | null;
    onpointercancel: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerdown: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerenter: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerleave: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointermove: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerout: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerover: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onpointerup: ((this: HTMLVideoElement, event: PointerEvent) => any) | null;
    onprogress: ((this: HTMLVideoElement, event: ProgressEvent<EventTarget>) => any) | null;
    onratechange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onreset: ((this: HTMLVideoElement, event: Event) => any) | null;
    onresize: ((this: HTMLVideoElement, event: UIEvent) => any) | null;
    onscroll: ((this: HTMLVideoElement, event: Event) => any) | null;
    onscrollend: ((this: HTMLVideoElement, event: Event) => any) | null;
    onsecuritypolicyviolation: ((this: HTMLVideoElement, event: SecurityPolicyViolationEvent) => any) | null;
    onseeked: ((this: HTMLVideoElement, event: Event) => any) | null;
    onseeking: ((this: HTMLVideoElement, event: Event) => any) | null;
    onselect: ((this: HTMLVideoElement, event: Event) => any) | null;
    onselectionchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onselectstart: ((this: HTMLVideoElement, event: Event) => any) | null;
    onslotchange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onstalled: ((this: HTMLVideoElement, event: Event) => any) | null;
    onsubmit: ((this: HTMLVideoElement, event: SubmitEvent) => any) | null;
    onsuspend: ((this: HTMLVideoElement, event: Event) => any) | null;
    ontimeupdate: ((this: HTMLVideoElement, event: Event) => any) | null;
    ontoggle: ((this: HTMLVideoElement, event: Event) => any) | null;
    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;
    ontransitioncancel: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    ontransitionend: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    ontransitionrun: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    ontransitionstart: ((this: HTMLVideoElement, event: TransitionEvent) => any) | null;
    onvolumechange: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwaiting: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkitanimationend: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkitanimationiteration: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkitanimationstart: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwebkittransitionend: ((this: HTMLVideoElement, event: Event) => any) | null;
    onwheel: ((this: HTMLVideoElement, event: WheelEvent) => any) | null;
    addEventListener: {
        <K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
    };
    removeEventListener: {
        <K_1 extends keyof GlobalEventHandlersEventMap>(type: K_1, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K_1]) => any, options?: boolean | EventListenerOptions | undefined): void;
        (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
    };
}) | [ChildTags[] | undefined];
export declare const Fragment: AIUIJSX;
declare global {
    var React: unknown;
    namespace JSX {
        type Element = AIUIJSXElement<keyof HTMLElementTagNameMap | TagCreatorFunction<any>, ChildTags[]>;
        type IntrinsicElements = {
            [K in keyof HTMLElementTagNameMap]: Partial<HTMLElementTagNameMap[K]>;
        };
    }
}
declare const _default: {
    AIUIJSX: AIUIJSX;
};
export default _default;
